¡n
tC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\COMController\EmailController.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
class 	
EmailController
 
: 
COMInterfaceBase ,
{ 
private 
Application 
outlook #
;# $
private 

_NameSpace 
ns 
= 
null  $
;$ %
private 
AutoResetEvent 
syncLock '
=( )
new* -
AutoResetEvent. <
(< =
false= B
)B C
;C D
private 
MailItem 
awaitingMail %
=& '
null( ,
;, -
private 
delegate 
void "
WaitForNewMailDelegate 4
(4 5
object5 ;
item< @
)@ A
;A B
private 
bool  
isUsingOpenedOutlook )
=* +
false, 1
;1 2
public 
EmailController 
( 
)  
{ 	
OpenOutlook 
( 
) 
; 
ns 
= 
GetCOM 
< 

_NameSpace "
>" #
(# $
outlook$ +
.+ ,
GetNamespace, 8
(8 9
$str9 ?
)? @
)@ A
;A B
} 	
private 
void 
OpenOutlook  
(  !
)! "
{ 	
if   
(   
Process   
.   
GetProcessesByName   )
(  ) *
$str  * 3
)  3 4
.  4 5
Length  5 ;
>  < =
$num  > ?
)  ? @
{!!  
isUsingOpenedOutlook"" $
=""% &
true""' +
;""+ ,
outlook## 
=## 
(## 
Application## &
)##& '
Marshal##' .
.##. /
GetActiveObject##/ >
(##> ?
$str##? T
)##T U
;##U V
}$$ 
else%% 
{&& 
outlook'' 
='' 
new'' 
Application'' )
('') *
)''* +
;''+ , 
isUsingOpenedOutlook(( $
=((% &
false((' ,
;((, -
})) 
}** 	
public++ 
void++ 
SendResultEmail++ #
(++# $
string++$ *
HTMLbody+++ 3
,++3 4
string++5 ;
body++< @
,++@ A
List++B F
<++F G
string++G M
>++M N
attachments++O Z
)++Z [
{,, 	
Logger-- 
.-- 
Info-- 
(-- 
$str-- 1
)--1 2
;--2 3
MailItem.. 
mailItem.. 
=.. 
null..  $
;..$ %
try// 
{00 
mailItem11 
=11 
GetCOM11 !
<11! "
MailItem11" *
>11* +
(11+ ,
outlook11, 3
.113 4

CreateItem114 >
(11> ?

OlItemType11? I
.11I J

olMailItem11J T
)11T U
)11U V
;11V W
mailItem22 
.22 
Subject22  
=22! "
$str22# E
;22E F
mailItem33 
.33 
To33 
=33  
ConfigurationManager33 2
.332 3
AppSettings333 >
[33> ?
$str33? N
]33N O
;33O P
mailItem44 
.44 
HTMLBody44 !
=44" #
body44$ (
+44) *
Environment44+ 6
.446 7
NewLine447 >
+44? @
HTMLbody44A I
;44I J
mailItem55 
.55 

Importance55 #
=55$ %
OlImportance55& 2
.552 3
olImportanceNormal553 E
;55E F
attachments66 
?66 
.66 
ForEach66 $
(66$ %
att66% (
=>66) +
mailItem66, 4
.664 5
Attachments665 @
.66@ A
Add66A D
(66D E
att66E H
)66H I
)66I J
;66J K
mailItem77 
.77 
Send77 
(77 
)77 
;77  
}88 
catch99 
(99 
System99 
.99 
	Exception99 "
ex99# %
)99% &
{:: 
Logger;; 
.;; 
Error;; 
(;; 
$str;; :
+;;; <
ex;;= ?
);;? @
;;;@ A
this<< 
.<< 
Dispose<< 
(<< 
)<< 
;<< 
}== 
}?? 	
public@@ 
string@@ 
GetOTP@@ 
(@@ 
DateTime@@ %
requestTime@@& 1
)@@1 2
{AA 	
stringBB 
otpBB 
=BB 
$strBB 
;BB 
tryCC 
{DD 

MAPIFolderEE 
inboxFolderEE &
=EE' (
GetCOMEE) /
<EE/ 0

MAPIFolderEE0 :
>EE: ;
(EE; <
nsEE< >
.EE> ?
GetDefaultFolderEE? O
(EEO P
OlDefaultFoldersEEP `
.EE` a
olFolderInboxEEa n
)EEn o
)EEo p
;EEp q
inboxFolderFF 
=FF 
GetCOMFF $
<FF$ %

MAPIFolderFF% /
>FF/ 0
(FF0 1
inboxFolderFF1 <
.FF< =
FoldersFF= D
[FFD E 
ConfigurationManagerFFE Y
.FFY Z
AppSettingsFFZ e
[FFe f
$strFFf v
]FFv w
]FFw x
)FFx y
;FFy z
ifGG 
(GG 
inboxFolderGG 
==GG  "
nullGG# '
)GG' (
returnGG) /
otpGG0 3
;GG3 4
inboxFolderHH 
.HH 
ItemsHH !
.HH! "
SortHH" &
(HH& '
$strHH' 7
,HH7 8
trueHH9 =
)HH= >
;HH> ?
MailItemII 
mailII 
=II 
nullII  $
;II$ %
LoggerJJ 
.JJ 
InfoJJ 
(JJ 
$strJJ 5
)JJ5 6
;JJ6 7
forKK 
(KK 
intKK 
iKK 
=KK 
$numKK 
;KK 
iKK  !
<=KK" $
inboxFolderKK% 0
.KK0 1
ItemsKK1 6
.KK6 7
CountKK7 <
;KK< =
++KK> @
iKK@ A
)KKA B
{LL 
MailItemMM 
tmpMM  
=MM! "
GetCOMMM# )
<MM) *
MailItemMM* 2
>MM2 3
(MM3 4
inboxFolderMM4 ?
.MM? @
ItemsMM@ E
[MME F
iMMF G
]MMG H
)MMH I
;MMI J
ifNN 
(NN 
tmpNN 
.NN 
ReceivedTimeNN (
>=NN) +
requestTimeNN, 7
&&NN8 :
tmpOO 
.OO  
SubjectOO  '
.OO' (
ContainsOO( 0
(OO0 1 
ConfigurationManagerOO1 E
.OOE F
AppSettingsOOF Q
[OOQ R
$strOOR c
]OOc d
)OOd e
)OOe f
{PP 
mailQQ 
=QQ 
tmpQQ "
;QQ" #
breakRR 
;RR 
}SS 
ifTT 
(TT 
tmpTT 
.TT 
ReceivedTimeTT (
<TT) *
requestTimeTT+ 6
)TT6 7
breakTT8 =
;TT= >
}UU 
ifVV 
(VV 
mailVV 
==VV 
nullVV  
)VV  !
{WW 
mailXX 
=XX 
WaitForNewEmailXX *
(XX* +
inboxFolderXX+ 6
,XX6 7
WaitForNewOTPMailXX8 I
)XXI J
;XXJ K
}YY 
RegexZZ 
regexZZ 
=ZZ 
newZZ !
RegexZZ" '
(ZZ' (
$strZZ( N
)ZZN O
;ZZO P
int[[ 
t[[ 
;[[ 
string\\ 
result\\ 
=\\ 
regex\\  %
.\\% &
Match\\& +
(\\+ ,
mail\\, 0
.\\0 1
Body\\1 5
)\\5 6
.\\6 7
Value\\7 <
;\\< =
if]] 
(]] 
int]] 
.]] 
TryParse]]  
(]]  !
result]]! '
,]]' (
out]]) ,
t]]- .
)]]. /
)]]/ 0
{^^ 
otp__ 
=__ 
result__  
;__  !
}`` 
mailaa 
.aa 
Deleteaa 
(aa 
)aa 
;aa 
returnbb 
otpbb 
;bb 
}cc 
catchdd 
(dd 
Systemdd 
.dd 
	Exceptiondd "
exdd# %
)dd% &
{ee 
Loggerff 
.ff 
Warnff 
(ff 
$strff <
+ff= >
exff? A
.ffA B
MessageffB I
)ffI J
;ffJ K
thisgg 
.gg 
Disposegg 
(gg 
)gg 
;gg 
returnhh 
otphh 
;hh 
}ii 
}kk 	
privatemm 
MailItemmm 
WaitForNewEmailmm (
(mm( )

MAPIFoldermm) 3
inboxmm4 9
,mm9 :"
WaitForNewMailDelegatemm; Q
delmmR U
)mmU V
{nn 	
varoo 
handleroo 
=oo 
newoo +
ItemsEvents_ItemAddEventHandleroo =
(oo= >
deloo> A
)ooA B
;ooB C
inboxpp 
.pp 
Itemspp 
.pp 
ItemAddpp 
+=pp  "
handlerpp# *
;pp* +
syncLockqq 
.qq 
WaitOneqq 
(qq 
)qq 
;qq 
inboxrr 
.rr 
Itemsrr 
.rr 
ItemAddrr 
-=rr  "
handlerrr# *
;rr* +
MailItemss 
itemss 
=ss 
thisss  
.ss  !
awaitingMailss! -
;ss- .
awaitingMailtt 
=tt 
nulltt 
;tt  
returnuu 
itemuu 
;uu 
}vv 	
privatexx 
voidxx 
WaitForNewOTPMailxx &
(xx& '
objectxx' -
itemxx. 2
)xx2 3
{yy 	
MailItemzz 
mailzz 
=zz 
GetCOMzz "
<zz" #
MailItemzz# +
>zz+ ,
(zz, -
itemzz- 1
aszz2 4
MailItemzz5 =
)zz= >
;zz> ?
if{{ 
({{ 
mail{{ 
!={{ 
null{{ 
&&{{ 
mail{{ #
.{{# $
Subject{{$ +
.{{+ ,
Contains{{, 4
({{4 5 
ConfigurationManager{{5 I
.{{I J
AppSettings{{J U
[{{U V
$str{{V g
]{{g h
){{h i
){{i j
{|| 
awaitingMail}} 
=}} 
mail}} #
;}}# $
syncLock~~ 
.~~ 
Set~~ 
(~~ 
)~~ 
;~~ 
} 
}
 	
private
 
bool
 
disposedValue
 "
=
# $
false
% *
;
* +
	protected
 
override
 
void
 
Dispose
  '
(
' (
bool
( ,
	disposing
- 6
)
6 7
{
 	
if
 
(
 
!
 
disposedValue
 
)
 
{
 
if
 
(
 
	disposing
 
)
 
{
 
}
 
if
 
(
 "
isUsingOpenedOutlook
 (
)
( )
{
 
CloseCOM
 
(
 
COMCloseType
 )
.
) *
DecrementRefCount
* ;
)
; <
;
< =
if
 
(
 
outlook
 
!=
  "
null
# '
)
' (
{
 
Marshal
 
.
  
ReleaseComObject
  0
(
0 1
outlook
1 8
)
8 9
;
9 :
}
 
outlook
 
=
 
null
 "
;
" #
}
 
else
 
{
 
CloseCOM
 
(
 
COMCloseType
 )
.
) *
Exit
* .
)
. /
;
/ 0
if
 
(
 
outlook
 
!=
 !
null
" &
)
& '
{
 
outlook
 
.
  
Quit
  $
(
$ %
)
% &
;
& '
Marshal
 
.
  #
FinalReleaseComObject
  5
(
5 6
outlook
6 =
)
= >
;
> ?
outlook
 
=
  !
null
" &
;
& '
}
   
}
¡¡ 
GC
££ 
.
££ 
Collect
££ 
(
££ 
)
££ 
;
££ 
GC
¤¤ 
.
¤¤ &
WaitForPendingFinalizers
¤¤ +
(
¤¤+ ,
)
¤¤, -
;
¤¤- .
disposedValue
¦¦ 
=
¦¦ 
true
¦¦  $
;
¦¦$ %
}
§§ 
}
¨¨ 	
	protected
¬¬ 
override
¬¬ 
void
¬¬ 
CleanUpSetup
¬¬  ,
(
¬¬, -
)
¬¬- .
{
­­ 	
closableCOMList
®® 
.
®® 
Add
®® 
(
®®  
typeof
®®  &
(
®®& '
MailItem
®®' /
)
®®/ 0
)
®®0 1
;
®®1 2
}
¯¯ 	
}
±± 
}²² é
tC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\COMController\ExcelController.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
class 	
ExcelController
 
: 
COMInterfaceBase ,
{ 
private 
readonly 
string 
[  
]  !
headers" )
=* +
{, -
$str. =
,= >
$str? N
}O P
;P Q
private 
readonly 
string 
[  
]  !
selectedCol" -
=. /
{ 
$str 
, 
$str (
,( )
$str* 3
,3 4
$str 
, 
$str #
,# $
$str% *
,* +
$str, 5
,5 6
$str7 A
,A B
$strC J
,J K
$strL R
,R S
$strT \
}] ^
;^ _
private 
readonly 
string 
basePath  (
;( )
private 
readonly 
string 

OutputPath  *
;* +
private 
readonly 
string 
DownloadPath  ,
;, -
private 
Application 
excel !
;! "
private 

Dictionary 
< 
CompanyName &
,& '
ProductType( 3
,3 4
Range5 :
>: ;

RangeTable< F
;F G
public   
ExcelController   
(   
)    
{!! 	
basePath"" 
="" 
Path"" 
."" 
GetDirectoryName"" ,
("", -
Assembly""- 5
.""5 6
GetEntryAssembly""6 F
(""F G
)""G H
.""H I
Location""I Q
)""Q R
;""R S

OutputPath## 
=## 
Path## 
.## 
IsPathRooted## *
(##* + 
ConfigurationManager##+ ?
.##? @
AppSettings##@ K
[##K L
$str##L ^
]##^ _
)##_ `
?##a b 
ConfigurationManager$$ $
.$$$ %
AppSettings$$% 0
[$$0 1
$str$$1 C
]$$C D
:$$E F
basePath%% 
+%%  
ConfigurationManager%% /
.%%/ 0
AppSettings%%0 ;
[%%; <
$str%%< N
]%%N O
.%%O P
	Substring%%P Y
(%%Y Z
$num%%Z [
)%%[ \
;%%\ ]
DownloadPath&& 
=&& 
Path&& 
.&&  
IsPathRooted&&  ,
(&&, - 
ConfigurationManager&&- A
.&&A B
AppSettings&&B M
[&&M N
$str&&N ^
]&&^ _
)&&_ `
?&&a b 
ConfigurationManager'' $
.''$ %
AppSettings''% 0
[''0 1
$str''1 A
]''A B
:''C D
basePath(( 
+((  
ConfigurationManager(( /
.((/ 0
AppSettings((0 ;
[((; <
$str((< L
]((L M
.((M N
	Substring((N W
(((W X
$num((X Y
)((Y Z
;((Z [
Init)) 
()) 
))) 
;)) 
Extract** 
(** 
)** 
;** 
}++ 	
private.. 
void.. 
Init.. 
(.. 
).. 
{// 	
Logger00 
.00 
Info00 
(00 
$str00 6
)006 7
;007 8

RangeTable11 
=11 
new11 

Dictionary11 '
<11' (
CompanyName11( 3
,113 4
ProductType115 @
,11@ A
Range11B G
>11G H
(11H I
)11I J
;11J K
cleanUpCSVFolder33 
(33 
)33 
;33 
excel44 
=44 
new44 
Application44 #
(44# $
)44$ %
;44% &
}55 	
private66 
void66 
Extract66 
(66 
)66 
{77 	
Logger88 
.88 
Info88 
(88 
$str88 L
)88L M
;88M N
foreach99 
(99 
var99 
xls99 
in99 
	Directory99  )
.99) *
GetFiles99* 2
(992 3
DownloadPath993 ?
,99? @
$str99A D
+::  
ConfigurationManager:: &
.::& '
AppSettings::' 2
[::2 3
$str::3 G
]::G H
)::H I
)::I J
{;; 
CompanyName<< 
company<< #
=<<$ %
default<<& -
(<<- .
CompanyName<<. 9
)<<9 :
;<<: ;
foreach== 
(== 
CompanyName== $
name==% )
in==* ,
Enum==- 1
.==1 2
	GetValues==2 ;
(==; <
typeof==< B
(==B C
CompanyName==C N
)==N O
)==O P
)==P Q
{>> 
if?? 
(?? 
Path?? 
.?? '
GetFileNameWithoutExtension?? 8
(??8 9
xls??9 <
)??< =
.??= >
Contains??> F
(??F G
name??G K
.??K L
ToString??L T
(??T U
)??U V
)??V W
)??W X
{@@ 
companyAA 
=AA  !
nameAA" &
;AA& '
}BB 
}CC 
	WorkbooksDD 
	workbooksDD #
=DD$ %
GetCOMDD& ,
<DD, -
	WorkbooksDD- 6
>DD6 7
(DD7 8
excelDD8 =
.DD= >
	WorkbooksDD> G
)DDG H
;DDH I
WorkbookEE 
workbookEE !
=EE" #
GetCOMEE$ *
<EE* +
WorkbookEE+ 3
>EE3 4
(EE4 5
	workbooksEE5 >
.EE> ?
OpenEE? C
(EEC D
xlsEED G
)EEG H
)EEH I
;EEI J
SheetsFF 
sheetsFF 
=FF 
GetCOMFF  &
<FF& '
SheetsFF' -
>FF- .
(FF. /
workbookFF/ 7
.FF7 8

WorksheetsFF8 B
)FFB C
;FFC D
	WorksheetGG 
sheetGG 
=GG  !
GetCOMGG" (
<GG( )
	WorksheetGG) 2
>GG2 3
(GG3 4
sheetsGG4 :
.GG: ;
ItemGG; ?
[GG? @
$numGG@ A
]GGA B
)GGB C
;GGC D
	GetRangesHH 
(HH 
sheetHH 
,HH  
companyHH! (
)HH( )
;HH) *
}II 
}JJ 	
privateKK 
voidKK 
	GetRangesKK 
(KK 
	WorksheetKK (
	workSheetKK) 2
,KK2 3
CompanyNameKK4 ?
nameKK@ D
)KKD E
{LL 	
RangeMM 
rangeMM 
=MM 
GetCOMMM  
<MM  !
RangeMM! &
>MM& '
(MM' (
	workSheetMM( 1
.MM1 2
ColumnsMM2 9
[MM9 :
$strMM: =
,MM= >
TypeMM? C
.MMC D
MissingMMD K
]MMK L
)MML M
;MMM N
varNN 
	firstAddrNN 
=NN 
StringToAddrNN (
(NN( )
GetCOMOO 
<OO 
RangeOO 
>OO 
(OO 
rangeOO #
.OO# $
FindOO$ (
(OO( )
headersOO) 0
[OO0 1
$numOO1 2
]OO2 3
,OO3 4
TypeOO5 9
.OO9 :
MissingOO: A
,OOA B
TypeOOC G
.OOG H
MissingOOH O
,OOO P
XlLookAtOOQ Y
.OOY Z
xlWholeOOZ a
)OOa b
)OOb c
.OOc d
AddressOOd k
)OOk l
;OOl m
varPP 

secondAddrPP 
=PP 
StringToAddrPP )
(PP) *
GetCOMPP* 0
<PP0 1
RangePP1 6
>PP6 7
(PP7 8
rangePP8 =
.PP= >
FindPP> B
(PPB C
headersPPC J
[PPJ K
$numPPK L
]PPL M
,PPM N
TypePPO S
.PPS T
MissingPPT [
,PP[ \
TypePP] a
.PPa b
MissingPPb i
,PPi j
XlLookAtPPk s
.PPs t
xlWholePPt {
)PP{ |
)PP| }
.PP} ~
Address	PP~ 
)
PP 
;
PP 
intQQ 
lastQQ 
=QQ 
GetCOMQQ 
<QQ 
RangeQQ #
>QQ# $
(QQ$ %
GetCOMQQ% +
<QQ+ ,
RangeQQ, 1
>QQ1 2
(QQ2 3
	workSheetQQ3 <
.QQ< =
CellsQQ= B
)QQB C
.QQC D
SpecialCellsQQD P
(QQP Q

XlCellTypeQQQ [
.QQ[ \
xlCellTypeLastCellQQ\ n
,QQn o
TypeQQp t
.QQt u
MissingQQu |
)QQ| }
)QQ} ~
.QQ~ 
Row	QQ 
;
QQ 

RangeTableRR 
[RR 
nameRR 
,RR 
ProductTypeRR '
.RR' (
SwapRR( ,
]RR, -
=RR. /
SelectRangeRR0 ;
(RR; <
	workSheetRR< E
,RRE F
	firstAddrRRG P
.RRP Q
Item2RRQ V
+RRW X
$numRRY Z
,RRZ [

secondAddrRR\ f
.RRf g
Item2RRg l
-RRm n
$numRRo p
)RRp q
;RRq r

RangeTableSS 
[SS 
nameSS 
,SS 
ProductTypeSS (
.SS( )
FuturesSS) 0
]SS0 1
=SS2 3
SelectRangeSS4 ?
(SS? @
	workSheetSS@ I
,SSI J

secondAddrSSK U
.SSU V
Item2SSV [
+SS\ ]
$numSS^ _
,SS_ `
lastSSa e
)SSe f
;SSf g
}TT 	
privateUU 
RangeUU 
SelectRangeUU !
(UU! "
	WorksheetUU" +
sheetUU, 1
,UU1 2
intUU3 6
startRowUU7 ?
,UU? @
intUUA D
endRowUUE K
)UUK L
{VV 	
intWW 
lastColWW 
=WW 
GetCOMWW  
<WW  !
RangeWW! &
>WW& '
(WW' (
GetCOMWW( .
<WW. /
RangeWW/ 4
>WW4 5
(WW5 6
sheetWW6 ;
.WW; <
CellsWW< A
)WWA B
.WWB C
SpecialCellsWWC O
(WWO P

XlCellTypeWWP Z
.WWZ [
xlCellTypeLastCellWW[ m
,WWm n
TypeWWo s
.WWs t
MissingWWt {
)WW{ |
)WW| }
.WW} ~
Column	WW~ 
;
WW 
varXX 
	startCellXX 
=XX 
GetCOMXX "
<XX" #
RangeXX# (
>XX( )
(XX) *
sheetXX* /
.XX/ 0
CellsXX0 5
[XX5 6
startRowXX6 >
,XX> ?
$numXX@ A
]XXA B
)XXB C
;XXC D
varYY 
endCellYY 
=YY 
GetCOMYY  
<YY  !
RangeYY! &
>YY& '
(YY' (
sheetYY( -
.YY- .
CellsYY. 3
[YY3 4
endRowYY4 :
,YY: ;
lastColYY< C
]YYC D
)YYD E
;YYE F
returnZZ 
GetCOMZZ 
<ZZ 
RangeZZ 
>ZZ  
(ZZ  !
sheetZZ! &
.ZZ& '
RangeZZ' ,
[ZZ, -
	startCellZZ- 6
,ZZ6 7
endCellZZ8 ?
]ZZ? @
)ZZ@ A
;ZZA B
}[[ 	
public^^ 
List^^ 
<^^ 
System^^ 
.^^ 
Data^^ 
.^^  
	DataTable^^  )
>^^) *
GetDataTableList^^+ ;
(^^; <
)^^< =
{__ 	
List`` 
<`` 
System`` 
.`` 
Data`` 
.`` 
	DataTable`` &
>``& '
dtList``( .
=``/ 0

RangeTable``1 ;
.``; <
GetCollections``< J
(``J K
)``K L
.``L M
Select``M S
(``S T
s``T U
=>``V X
RangeToDataTable``Y i
(``i j
s``j k
.``k l
Item1``l q
,``q r
s``s t
.``t u
Item2``u z
,``z {
s``| }
.``} ~
Item3	``~ 
)
`` 
)
`` 
.
`` 
ToList
`` 
(
`` 
)
`` 
;
`` 
foreachaa 
(aa 
varaa 
dtaa 
inaa 
dtListaa %
)aa% &
{bb 
TrimDataTablecc 
(cc 
dtcc  
)cc  !
;cc! "
}dd 
returnee 
dtListee 
;ee 
}ff 	
publicgg 
voidgg 
	SaveAsCSVgg 
(gg 
)gg 
{hh 	
Loggerii 
.ii 
Infoii 
(ii 
$strii 0
)ii0 1
;ii1 2

RangeTablejj 
.jj 
GetCollectionsjj %
(jj% &
)jj& '
.jj' (
ForEachjj( /
(jj/ 0
sjj0 1
=>jj2 4
{kk 

RangeToCSVll 
(ll 
sll 
.ll 
Item1ll "
,ll" #
sll$ %
.ll% &
Item2ll& +
,ll+ ,
sll- .
.ll. /
Item3ll/ 4
)ll4 5
;ll5 6
TrimCSVmm 
(mm 
smm 
.mm 
Item1mm 
,mm  
smm! "
.mm" #
Item2mm# (
)mm( )
;mm) *
}nn 
)nn 
;nn 
}oo 	
privaterr 
Tuplerr 
<rr 
stringrr 
,rr 
intrr !
>rr! "
StringToAddrrr# /
(rr/ 0
stringrr0 6
addrrr7 ;
)rr; <
{ss 	
vartt 
addresstt 
=tt 
addrtt 
.tt 
Splittt $
(tt$ %
$strtt% (
.tt( )
ToCharArraytt) 4
(tt4 5
)tt5 6
)tt6 7
.tt7 8
Wherett8 =
(tt= >
stt> ?
=>tt@ B
!ttC D
stringttD J
.ttJ K
IsNullOrEmptyttK X
(ttX Y
sttY Z
)ttZ [
)tt[ \
.tt\ ]
ToArraytt] d
(ttd e
)tte f
;ttf g
returnuu 
newuu 
Tupleuu 
<uu 
stringuu #
,uu# $
intuu% (
>uu( )
(uu) *
addressuu* 1
[uu1 2
$numuu2 3
]uu3 4
,uu4 5
intuu6 9
.uu9 :
Parseuu: ?
(uu? @
addressuu@ G
[uuG H
$numuuH I
]uuI J
)uuJ K
)uuK L
;uuL M
}vv 	
privatexx 
voidxx 

RangeToCSVxx 
(xx  
CompanyNamexx  +
namexx, 0
,xx0 1
ProductTypexx2 =
typexx> B
,xxB C
RangexxD I
rangexxJ O
)xxO P
{yy 	
varzz 
targetzz 
=zz 
excelzz 
.zz 
	Workbookszz (
.zz( )
Addzz) ,
(zz, -
Typezz- 1
.zz1 2
Missingzz2 9
)zz9 :
;zz: ;
	Worksheet{{ 
sheet{{ 
={{ 
target{{ $
.{{$ %
Sheets{{% +
[{{+ ,
$num{{, -
]{{- .
;{{. /
int|| 
lastCol|| 
=|| 
range|| 
.||  
Cells||  %
.||% &
SpecialCells||& 2
(||2 3

XlCellType||3 =
.||= >
xlCellTypeLastCell||> P
,||P Q
Type||R V
.||V W
Missing||W ^
)||^ _
.||_ `
Column||` f
;||f g
int}} 
lastRow}} 
=}} 
sheet}} 
.}}  
Cells}}  %
.}}% &
SpecialCells}}& 2
(}}2 3

XlCellType}}3 =
.}}= >
xlCellTypeLastCell}}> P
,}}P Q
Type}}R V
.}}V W
Missing}}W ^
)}}^ _
.}}_ `
Row}}` c
;}}c d
var~~ 
to~~ 
=~~ 
sheet~~ 
.~~ 
Range~~  
[~~  !
sheet~~! &
.~~& '
Cells~~' ,
[~~, -
$num~~- .
,~~. /
$num~~0 1
]~~1 2
,~~2 3
sheet~~4 9
.~~9 :
Cells~~: ?
[~~? @
lastRow~~@ G
,~~G H
lastCol~~I P
]~~P Q
]~~Q R
;~~R S
range 
. 
Copy 
( 
to 
) 
; 
target
 
.
 
SaveAs
 
(
 

OutputPath
 $
+
 
name
 
+
 
type
 
+
 
$str
  &
,
& '
XlFileFormat
( 4
.
4 5
xlCSVWindows
5 A
)
A B
;
B C
target
 
.
 
Close
 
(
 
false
 
,
 
Type
  $
.
$ %
Missing
% ,
,
, -
Type
. 2
.
2 3
Missing
3 :
)
: ;
;
; <
}
 	
private
 
System
 
.
 
Data
 
.
 
	DataTable
 %
RangeToDataTable
& 6
(
6 7
CompanyName
7 B
name
C G
,
G H
ProductType
I T
type
U Y
,
Y Z
Range
[ `
range
a f
)
f g
{
 	
System
 
.
 
Data
 
.
 
	DataTable
 !
	dataTable
" +
=
, -
new
. 1
System
2 8
.
8 9
Data
9 =
.
= >
	DataTable
> G
(
G H
)
H I
;
I J
	dataTable
 
.
 
	TableName
 
=
  !
$str
" $
+
% &
name
' +
+
, -
type
. 2
;
2 3
object
 
[
 
,
 
]
 
rawData
 
=
 
(
  !
object
! '
[
' (
,
( )
]
) *
)
* +
range
+ 0
?
0 1
.
1 2
Value2
2 8
;
8 9
if
 
(
 
rawData
 
==
 
null
 
)
  
return
! '
	dataTable
( 1
;
1 2
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<=
 
rawData
  '
.
' (
	GetLength
( 1
(
1 2
$num
2 3
)
3 4
;
4 5
++
6 8
i
8 9
)
9 :
{
 
if
 
(
 
rawData
 
[
 
$num
 
,
 
i
  
]
  !
==
" $
null
% )
)
) *
continue
+ 3
;
3 4
	dataTable
 
.
 
Columns
 !
.
! "
Add
" %
(
% &
rawData
& -
[
- .
$num
. /
,
/ 0
i
1 2
]
2 3
.
3 4
ToString
4 <
(
< =
)
= >
,
> ?
rawData
@ G
[
G H
$num
H I
,
I J
i
J K
]
K L
.
L M
GetType
M T
(
T U
)
U V
)
V W
;
W X
}
 
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<=
 
rawData
  '
.
' (
	GetLength
( 1
(
1 2
$num
2 3
)
3 4
;
4 5
++
6 8
i
8 9
)
9 :
{
 
DataRow
 
row
 
=
 
	dataTable
 '
.
' (
NewRow
( .
(
. /
)
/ 0
;
0 1
for
 
(
 
int
 
j
 
=
 
$num
 
;
 
j
  
<=
! #
rawData
$ +
.
+ ,
	GetLength
, 5
(
5 6
$num
6 7
)
7 8
;
8 9
++
: <
j
< =
)
= >
{
 
if
 
(
 
rawData
 
[
  
$num
  !
,
! "
j
# $
]
$ %
==
& (
null
) -
)
- .
continue
/ 7
;
7 8
row
 
[
 
rawData
 
[
  
$num
  !
,
! "
j
# $
]
$ %
.
% &
ToString
& .
(
. /
)
/ 0
]
0 1
=
2 3
rawData
4 ;
[
; <
i
< =
,
= >
j
? @
]
@ A
;
A B
}
 
	dataTable
 
.
 
Rows
 
.
 
Add
 "
(
" #
row
# &
)
& '
;
' (
}
 
return
 
	dataTable
 
;
 
}
 	
private
 
void
 
TrimCSV
 
(
 
CompanyName
 (
name
) -
,
- .
ProductType
/ :
type
; ?
)
? @
{
 	
string
 
path
 
=
 

OutputPath
 $
+
% &
name
' +
+
, -
type
. 2
+
3 4
$str
5 ;
;
; <
System
   
.
   
Data
   
.
   
	DataTable
   !
csv
  " %
=
  & '
HelperFunctions
  ( 7
.
  7 8
CSVToDataTable
  8 F
(
  F G
path
  G K
)
  K L
;
  L M
csv
¡¡ 
.
¡¡ 
	TableName
¡¡ 
=
¡¡ 
$str
¡¡ 
+
¡¡  
name
¡¡! %
+
¡¡& '
type
¡¡( ,
;
¡¡, -
foreach
¢¢ 
(
¢¢ 

DataColumn
¢¢ 
col
¢¢ "
in
¢¢# %
csv
¢¢& )
.
¢¢) *
Columns
¢¢* 1
)
¢¢1 2
{
££ 
if
¤¤ 
(
¤¤ 
selectedCol
¤¤ 
.
¤¤  
All
¤¤  #
(
¤¤# $
s
¤¤$ %
=>
¤¤& (
s
¤¤) *
!=
¤¤+ -
col
¤¤. 1
.
¤¤1 2

ColumnName
¤¤2 <
)
¤¤< =
)
¤¤= >
{
¥¥ 
csv
¦¦ 
.
¦¦ 
Columns
¦¦ 
.
¦¦  
Remove
¦¦  &
(
¦¦& '
col
¦¦' *
)
¦¦* +
;
¦¦+ ,
}
§§ 
}
¨¨ 
HelperFunctions
©© 
.
©©  
SaveDataTableToCSV
©© .
(
©©. /
csv
©©/ 2
,
©©2 3
$str
©©4 6
)
©©6 7
;
©©7 8
}
ªª 	
private
¬¬ 
void
¬¬ 
TrimDataTable
¬¬ "
(
¬¬" #
System
¬¬# )
.
¬¬) *
Data
¬¬* .
.
¬¬. /
	DataTable
¬¬/ 8
dt
¬¬9 ;
)
¬¬; <
{
­­ 	
foreach
®® 
(
®® 
string
®® 
col
®® 
in
®® !
dt
®®" $
.
®®$ %
Columns
®®% ,
.
®®, -
Cast
®®- 1
<
®®1 2

DataColumn
®®2 <
>
®®< =
(
®®= >
)
®®> ?
.
¯¯! "
Select
¯¯" (
(
¯¯( )
x
¯¯) *
=>
¯¯+ -
x
¯¯. /
.
¯¯/ 0

ColumnName
¯¯0 :
)
¯¯: ;
.
°°! "
ToArray
°°" )
(
°°) *
)
°°* +
)
°°+ ,
{
±± 
if
²² 
(
²² 
!
²² 
selectedCol
²² 
.
²²  
Any
²²  #
(
²²# $
s
²²$ %
=>
²²& (
s
²²) *
==
²²+ -
col
²². 1
)
²²1 2
)
²²2 3
{
³³ 
dt
´´ 
.
´´ 
Columns
´´ 
.
´´ 
Remove
´´ %
(
´´% &
col
´´& )
)
´´) *
;
´´* +
}
µµ 
}
¶¶ 
}
·· 	
private
¸¸ 
void
¸¸ 
cleanUpCSVFolder
¸¸ %
(
¸¸% &
)
¸¸& '
{
¹¹ 	
System
ºº 
.
ºº 
IO
ºº 
.
ºº 
DirectoryInfo
ºº #
di
ºº$ &
=
ºº' (
new
ºº) ,
DirectoryInfo
ºº- :
(
ºº: ;
Path
ºº; ?
.
ºº? @
IsPathRooted
ºº@ L
(
ººL M"
ConfigurationManager
ººM a
.
ººa b
AppSettings
ººb m
[
ººm n
$strººn 
]ºº 
)ºº 
?ºº "
ConfigurationManager
»» $
.
»»$ %
AppSettings
»»% 0
[
»»0 1
$str
»»1 C
]
»»C D
:
»»E F
basePath
¼¼ 
+
¼¼ "
ConfigurationManager
¼¼ /
.
¼¼/ 0
AppSettings
¼¼0 ;
[
¼¼; <
$str
¼¼< N
]
¼¼N O
.
¼¼O P
	Substring
¼¼P Y
(
¼¼Y Z
$num
¼¼Z [
)
¼¼[ \
)
¼¼\ ]
;
¼¼] ^
foreach
¾¾ 
(
¾¾ 
FileInfo
¾¾ 
file
¾¾ "
in
¾¾# %
di
¾¾& (
.
¾¾( )
GetFiles
¾¾) 1
(
¾¾1 2
)
¾¾2 3
)
¾¾3 4
{
¿¿ 
file
ÀÀ 
.
ÀÀ 
Delete
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÁÁ 
}
ÂÂ 	
public
ÄÄ 
static
ÄÄ 
void
ÄÄ "
DataTableCorrectDate
ÄÄ /
(
ÄÄ/ 0
ref
ÄÄ0 3
System
ÄÄ4 :
.
ÄÄ: ;
Data
ÄÄ; ?
.
ÄÄ? @
	DataTable
ÄÄ@ I
dt
ÄÄJ L
,
ÄÄL M
string
ÄÄN T
colName
ÄÄU \
)
ÄÄ\ ]
{
ÅÅ 	
foreach
ÆÆ 
(
ÆÆ 
DataRow
ÆÆ 
row
ÆÆ  
in
ÆÆ! #
dt
ÆÆ$ &
.
ÆÆ& '
Rows
ÆÆ' +
)
ÆÆ+ ,
{
ÇÇ 
row
ÈÈ 
[
ÈÈ 
colName
ÈÈ 
]
ÈÈ 
=
ÈÈ 
DateTime
ÈÈ '
.
ÉÉ 

FromOADate
ÉÉ #
(
ÉÉ# $
double
ÉÉ$ *
.
ÉÉ* +
Parse
ÉÉ+ 0
(
ÉÉ0 1
row
ÉÉ1 4
[
ÉÉ4 5
colName
ÉÉ5 <
]
ÉÉ< =
.
ÊÊ 
ToString
ÊÊ !
(
ÊÊ! "
)
ÊÊ" #
)
ÊÊ# $
)
ÊÊ$ %
.
ËË 
ToString
ËË !
(
ËË! "
$str
ËË" .
)
ËË. /
;
ËË/ 0
}
ÌÌ 
}
ÍÍ 	
private
ÏÏ 
bool
ÏÏ 
disposedValue
ÏÏ "
=
ÏÏ# $
false
ÏÏ% *
;
ÏÏ* +
	protected
ÑÑ 
override
ÑÑ 
void
ÑÑ 
Dispose
ÑÑ  '
(
ÑÑ' (
bool
ÑÑ( ,
	disposing
ÑÑ- 6
)
ÑÑ6 7
{
ÒÒ 	
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
disposedValue
ÓÓ 
)
ÓÓ 
{
ÔÔ 
if
ÕÕ 
(
ÕÕ 
	disposing
ÕÕ 
)
ÕÕ 
{
ÖÖ 
}
×× 
Logger
ÛÛ 
.
ÛÛ 
Info
ÛÛ 
(
ÛÛ 
$str
ÛÛ 5
)
ÛÛ5 6
;
ÛÛ6 7
CloseCOM
ÝÝ 
(
ÝÝ 
COMCloseType
ÝÝ %
.
ÝÝ% &
Exit
ÝÝ& *
)
ÝÝ* +
;
ÝÝ+ ,
if
ÞÞ 
(
ÞÞ 
excel
ÞÞ 
!=
ÞÞ 
null
ÞÞ !
)
ÞÞ! "
{
ßß 
excel
àà 
.
àà 
Quit
àà 
(
àà 
)
àà  
;
àà  !
Marshal
áá 
.
áá #
FinalReleaseComObject
áá 1
(
áá1 2
excel
áá2 7
)
áá7 8
;
áá8 9
excel
ââ 
=
ââ 
null
ââ  
;
ââ  !
}
ãã 
GC
ää 
.
ää 
Collect
ää 
(
ää 
)
ää 
;
ää 
GC
åå 
.
åå &
WaitForPendingFinalizers
åå +
(
åå+ ,
)
åå, -
;
åå- .
disposedValue
ææ 
=
ææ 
true
ææ  $
;
ææ$ %
}
çç 
}
èè 	
	protected
éé 
override
éé 
void
éé 
CleanUpSetup
éé  ,
(
éé, -
)
éé- .
{
êê 	
closableCOMList
ëë 
.
ëë 
Add
ëë 
(
ëë  
typeof
ëë  &
(
ëë& '
Workbook
ëë' /
)
ëë/ 0
)
ëë0 1
;
ëë1 2
}
ìì 	
}
îî 
}ïï S
sC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Comparator\ComparatorFilters.cs
	namespace

 	
OverWatcher


 
.

 
TradeReconMonitor

 '
.

' (
Core

( ,
{ 
partial 
class !
ICEOpenLinkComparator '
{ 
private 
delegate 
void 
ResultFilter *
(* +
List+ /
</ 0
	DataTable0 9
>9 :
diff; ?
)? @
;@ A
private 
List 
< 
ResultFilter !
>! "

filterList# -
=. /
new0 3
List4 8
<8 9
ResultFilter9 E
>E F
(F G
)G H
;H I
public 
void 
ApplyFilter 
(  
List  $
<$ %
	DataTable% .
>. /
diff0 4
)4 5
{ 	

filterList 
. 
Add 
( 

DiffFilter %
)% &
;& '
foreach 
( 
ResultFilter  
r! "
in# %

filterList& 0
)0 1
{ 
r 
. 
Invoke 
( 
diff 
) 
; 
} 
} 	
private 
static 
void 

DiffFilter &
(& '
List' +
<+ ,
	DataTable, 5
>5 6
diff7 ;
); <
{ 	
foreach 
( 
CompanyName  
c! "
in# %
Enum& *
.* +
	GetValues+ 4
(4 5
typeof5 ;
(; <
CompanyName< G
)G H
)H I
)I J
{ 
var 
tables 
= 
diff !
.! "
FindAll" )
() *
d* +
=>, .
d/ 0
.0 1
	TableName1 :
.: ;
Contains; C
(C D
cD E
.E F
ToStringF N
(N O
)O P
)P Q
)Q R
;R S
	DataTable 
swap 
=  
tables! '
.' (
Find( ,
(, -
d- .
=>/ 1
d2 3
.3 4
	TableName4 =
.= >
Contains> F
(F G
ProductTypeG R
.R S
SwapS W
.W X
ToStringX `
(` a
)a b
)b c
)c d
;d e
	DataTable 
future  
=! "
tables# )
.) *
Find* .
(. /
d/ 0
=>1 3
d4 5
.5 6
	TableName6 ?
.? @
Contains@ H
(H I
ProductTypeI T
.T U
FuturesU \
.\ ]
ToString] e
(e f
)f g
)g h
)h i
;i j
if   
(   
swap   
==   
null    
||  ! #
future  $ *
==  + -
null  . 2
)  2 3
return  4 :
;  : ;
HelperFunctions!! 
.!!  
SortDataTable!!  -
<!!- .
int!!. 1
>!!1 2
(!!2 3
swap!!3 7
,!!7 8
$str!!9 B
,!!B C
SortDirection!!D Q
.!!Q R
ASC!!R U
)!!U V
;!!V W
HelperFunctions"" 
.""  
SortDataTable""  -
<""- .
int"". 1
>""1 2
(""2 3
future""3 9
,""9 :
$str""; D
,""D E
SortDirection""F S
.""S T
ASC""T W
)""W X
;""X Y
int## 
	swapCount## 
=## 
$num##  !
;##! "
int$$ 
futureCount$$ 
=$$  !
$num$$" #
;$$# $

LinkedList%% 
<%% 
DataRow%% "
>%%" #
swapRemoveList%%$ 2
=%%3 4
new%%5 8

LinkedList%%9 C
<%%C D
DataRow%%D K
>%%K L
(%%L M
)%%M N
;%%N O

LinkedList&& 
<&& 
DataRow&& "
>&&" #
futureRemoveList&&$ 4
=&&5 6
new&&7 :

LinkedList&&; E
<&&E F
DataRow&&F M
>&&M N
(&&N O
)&&O P
;&&P Q
while'' 
('' 
	swapCount''  
<''! "
swap''# '
.''' (
Rows''( ,
.'', -
Count''- 2
&&''3 5
futureCount''6 A
<''B C
future''D J
.''J K
Rows''K O
.''O P
Count''P U
)''U V
{(( 
int)) 
swapID)) 
=))  
$num))! "
;))" #
int** 
futureID**  
=**! "
$num**# $
;**$ %
int++ 
.++ 
TryParse++  
(++  !
swap++! %
.++% &
Rows++& *
[++* +
	swapCount+++ 4
]++4 5
[++5 6
$str++6 ?
]++? @
.++@ A
ToString++A I
(++I J
)++J K
,++K L
out++M P
swapID++Q W
)++W X
;++X Y
int,, 
.,, 
TryParse,,  
(,,  !
future,,! '
.,,' (
Rows,,( ,
[,,, -
futureCount,,- 8
],,8 9
[,,9 :
$str,,: C
],,C D
.,,D E
ToString,,E M
(,,M N
),,N O
,,,O P
out,,Q T
futureID,,U ]
),,] ^
;,,^ _
if-- 
(-- 
swapID-- 
!=-- !
futureID--" *
)--* +
{.. 
if// 
(// 
swapID// "
>//# $
futureID//% -
)//- .
{00 
++11 
futureCount11 )
;11) *
}22 
else33 
{44 
++55 
	swapCount55 '
;55' (
}66 
continue77  
;77  !
}88 
if99 
(99 
swap99 
.99 
Rows99 !
[99! "
	swapCount99" +
]99+ ,
[99, -
$str99- 2
]992 3
!=994 6
future997 =
.99= >
Rows99> B
[99B C
futureCount99C N
]99N O
[99O P
$str99P U
]99U V
&&99W Y
swap:: 
.:: 
Rows:: !
[::! "
	swapCount::" +
]::+ ,
[::, -
$str::- 7
]::7 8
==::9 ;
future::< B
.::B C
Rows::C G
[::G H
futureCount::H S
]::S T
[::T U
$str::U _
]::_ `
&&::a c
swap;; 
.;; 
Rows;; !
[;;! "
	swapCount;;" +
];;+ ,
[;;, -
$str;;- 3
];;3 4
==;;5 7
future;;8 >
.;;> ?
Rows;;? C
[;;C D
futureCount;;D O
];;O P
[;;P Q
$str;;Q W
];;W X
&&;;Y [
swap<< 
.<< 
Rows<< !
[<<! "
	swapCount<<" +
]<<+ ,
[<<, -
$str<<- 5
]<<5 6
==<<7 9
future<<: @
.<<@ A
Rows<<A E
[<<E F
futureCount<<F Q
]<<Q R
[<<R S
$str<<S [
]<<[ \
&&<<] _
swap== 
.== 
Rows== !
[==! "
	swapCount==" +
]==+ ,
[==, -
$str==- 6
]==6 7
.==7 8
ToString==8 @
(==@ A
)==A B
.==B C
Length==C I
>==J K
future==L R
.==R S
Rows==S W
[==W X
futureCount==X c
]==c d
[==d e
$str==e n
]==n o
.==o p
ToString==p x
(==x y
)==y z
.==z {
Length	=={ 
?
== 
swap>>  
.>>  !
Rows>>! %
[>>% &
	swapCount>>& /
]>>/ 0
[>>0 1
$str>>1 :
]>>: ;
.>>; <
ToString>>< D
(>>D E
)>>E F
.>>F G
Contains>>G O
(>>O P
future>>P V
.>>V W
Rows>>W [
[>>[ \
futureCount>>\ g
]>>g h
[>>h i
$str>>i r
]>>r s
.>>s t
ToString>>t |
(>>| }
)>>} ~
)>>~ 
:
>> 
future?? "
.??" #
Rows??# '
[??' (
futureCount??( 3
]??3 4
[??4 5
$str??5 >
]??> ?
.??? @
ToString??@ H
(??H I
)??I J
.??J K
Contains??K S
(??S T
swap??T X
.??X Y
Rows??Y ]
[??] ^
	swapCount??^ g
]??g h
[??h i
$str??i r
]??r s
.??s t
ToString??t |
(??| }
)??} ~
)??~ 
)	?? 
{@@ 
swapRemoveListAA &
.AA& '
AddLastAA' .
(AA. /
swapAA/ 3
.AA3 4
RowsAA4 8
[AA8 9
	swapCountAA9 B
]AAB C
)AAC D
;AAD E
futureRemoveListBB (
.BB( )
AddLastBB) 0
(BB0 1
futureBB1 7
.BB7 8
RowsBB8 <
[BB< =
futureCountBB= H
]BBH I
)BBI J
;BBJ K
++CC 
futureCountCC %
;CC% &
++DD 
	swapCountDD #
;DD# $
}EE 
}FF 
foreachGG 
(GG 
varGG 
dataRowGG $
inGG% '
swapRemoveListGG( 6
)GG6 7
{HH 
swapII 
.II 
RowsII 
.II 
RemoveII $
(II$ %
dataRowII% ,
)II, -
;II- .
}JJ 
foreachKK 
(KK 
varKK 
dataRowKK $
inKK% '
futureRemoveListKK( 8
)KK8 9
{LL 
futureMM 
.MM 
RowsMM 
.MM  
RemoveMM  &
(MM& '
dataRowMM' .
)MM. /
;MM/ 0
}NN 
}OO 
}QQ 	
}RR 
}SS ñZ
wC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Comparator\ICEOpenLinkComparator.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{		 
partial 
class !
ICEOpenLinkComparator '
{ 
public 
List 
< 
	DataTable 
> 
Diff #
(# $
List$ (
<( )
	DataTable) 2
>2 3
iceList4 ;
,; <
List= A
<A B
	DataTableB K
>K L

oracleListM W
)W X
{ 	
Logger 
. 
Info 
( 
$str 0
)0 1
;1 2
List 
< 
	DataTable 
> 
diff  
=! "
new# &
List' +
<+ ,
	DataTable, 5
>5 6
(6 7
)7 8
;8 9
foreach 
( 
	DataTable 
dt  
in! #
iceList$ +
)+ ,
{ 
SwapLegIDAndDealID "
(" #
dt# %
)% &
;& '
} 
foreach 
( 
CompanyName  
c! "
in# %
Enum& *
.* +
	GetValues+ 4
(4 5
typeof5 ;
(; <
CompanyName< G
)G H
)H I
)I J
{ 
foreach 
( 
ProductType #
p$ %
in& (
Enum) -
.- .
	GetValues. 7
(7 8
typeof8 >
(> ?
ProductType? J
)J K
)K L
)L M
{ 
	DataTable 
ice !
=" #
ICEResultFilter$ 3
(3 4
iceList4 ;
.; <
Find< @
(@ A
sA B
=>C E
sF G
.G H
	TableNameH Q
==R T
cU V
.V W
ToStringW _
(_ `
)` a
+b c
pd e
.e f
ToStringf n
(n o
)o p
)p q
)q r
;r s
	DataTable 
oracle $
=% &

oracleList' 1
.1 2
Find2 6
(6 7
s7 8
=>9 ;
s< =
.= >
	TableName> G
==H J
cK L
.L M
ToStringM U
(U V
)V W
+X Y
pZ [
.[ \
ToString\ d
(d e
)e f
)f g
;g h
diff 
. 
Add 
( 
SwapLegIDAndDealID /
(/ 0
Diff0 4
(4 5
ice5 8
,8 9
oracle: @
)@ A
)A B
)B C
;C D
} 
} 
foreach 
( 
	DataTable 
dt !
in" $
iceList% ,
), -
{ 
SwapLegIDAndDealID   "
(  " #
dt  # %
)  % &
;  & '
}!! 
ApplyFilter"" 
("" 
diff"" 
)"" 
;"" 
return## 
diff## 
;## 
}$$ 	
public&& 
	DataTable&& 
Diff&& 
(&& 
	DataTable&& '
ice&&( +
,&&+ ,
	DataTable&&- 6
oracle&&7 =
)&&= >
{'' 	
HelperFunctions(( 
.(( 
SortDataTable(( )
<(() *
int((* -
>((- .
(((. /
ice((/ 2
,((2 3
$str((4 =
,((= >
SortDirection((? L
.((L M
ASC((M P
)((P Q
;((Q R
HelperFunctions)) 
.)) 
SortDataTable)) )
<))) *
int))* -
>))- .
()). /
oracle))/ 5
,))5 6
$str))7 B
,))B C
SortDirection))D Q
.))Q R
ASC))R U
)))U V
;))V W
	DataTable** 
diff** 
=** 
ice**  
.**  !
Clone**! &
(**& '
)**' (
;**( )
diff++ 
.++ 
	TableName++ 
=++ 
diff++ !
.++! "
	TableName++" +
+++, -
$str++. A
;++A B
int,, 
oracleRowsCount,, 
=,,  !
oracle,," (
.,,( )
Rows,,) -
.,,- .
Count,,. 3
;,,3 4
int-- 
iceRowsCount-- 
=-- 
ice-- "
.--" #
Rows--# '
.--' (
Count--( -
;--- .
int.. 
oracleCount.. 
=.. 
$num.. 
;..  
int// 
iceCount// 
=// 
$num// 
;// 
while00 
(00 
oracleCount00 
<00  
oracleRowsCount00! 0
&&001 3
iceCount004 <
<00= >
iceRowsCount00> J
)00J K
{11 
int22 
oc22 
=22 
int22 
.22 
Parse22 "
(22" #
oracle22# )
.22) *
Rows22* .
[22. /
oracleCount22/ :
]22: ;
[22; <
$str22< G
]22G H
.22H I
ToString22I Q
(22Q R
)22R S
)22S T
;22T U
int33 
ic33 
=33 
int33 
.33 
Parse33 "
(33" #
ice33# &
.33& '
Rows33' +
[33+ ,
iceCount33, 4
]334 5
[335 6
$str336 ?
]33? @
.33@ A
ToString33A I
(33I J
)33J K
)33K L
;33L M
if44 
(44 
oc44 
==44 
ic44 
)44 
{55 
oracleCount66 
++66 !
;66! "
iceCount77 
++77 
;77 
}88 
else99 
if99 
(99 
oc99 
>99 
ic99 
)99  
{:: 
diff;; 
.;; 
	ImportRow;; "
(;;" #
ice;;# &
.;;& '
Rows;;' +
[;;+ ,
iceCount;;, 4
++;;4 6
];;6 7
);;7 8
;;;8 9
}<< 
else== 
{>> 
oracleCount?? 
++?? !
;??! "
}@@ 
}AA 
whileBB 
(BB 
iceCountBB 
<BB 
iceRowsCountBB )
)BB) *
{CC 
diffDD 
.DD 
	ImportRowDD 
(DD 
iceDD "
.DD" #
RowsDD# '
[DD' (
iceCountDD( 0
++DD0 2
]DD2 3
)DD3 4
;DD4 5
}EE 
returnFF 
diffFF 
;FF 
}GG 	
publicII 
	DataTableII 
SwapLegIDAndDealIDII +
(II+ ,
	DataTableII, 5
iceII6 9
)II9 :
{JJ 	
foreachKK 
(KK 
DataRowKK 
rowKK  
inKK! #
iceKK$ '
.KK' (
RowsKK( ,
)KK, -
{LL 
ifMM 
(MM 
rowMM 
[MM 
$strMM  
]MM  !
!=MM" $
DBNullMM% +
.MM+ ,
ValueMM, 1
&&MM2 4
!MM5 6
stringMM6 <
.MM< =
IsNullOrEmptyMM= J
(MMJ K
rowMMK N
[MMN O
$strMMO W
]MMW X
.MMX Y
ToStringMMY a
(MMa b
)MMb c
)MMc d
)MMd e
{NN 
stringOO 
dealOO 
=OO  !
rowOO" %
[OO% &
$strOO& /
]OO/ 0
.OO0 1
ToStringOO1 9
(OO9 :
)OO: ;
;OO; <
stringPP 
legPP 
=PP  
rowPP! $
[PP$ %
$strPP% -
]PP- .
.PP. /
ToStringPP/ 7
(PP7 8
)PP8 9
;PP9 :
rowQQ 
[QQ 
$strQQ !
]QQ! "
=QQ# $
legQQ% (
;QQ( )
rowRR 
[RR 
$strRR  
]RR  !
=RR" #
dealRR$ (
;RR( )
}SS 
}TT 
returnUU 
iceUU 
;UU 
}VV 	
publicXX 
	DataTableXX 
ICEResultFilterXX (
(XX( )
	DataTableXX) 2
iceXX3 6
)XX6 7
{YY 	

LinkedListZZ 
<ZZ 
DataRowZZ 
>ZZ 
repeatedZZ  (
=ZZ) *
newZZ+ .

LinkedListZZ/ 9
<ZZ9 :
DataRowZZ: A
>ZZA B
(ZZB C
)ZZC D
;ZZD E
int[[ 
loop[[ 
=[[ 
$num[[ 
;[[ 
do\\ 
{]] 
for^^ 
(^^ 
int^^ 
i^^ 
=^^ 
$num^^ 
;^^ 
i^^  !
<^^" #
ice^^$ '
.^^' (
Rows^^( ,
.^^, -
Count^^- 2
;^^2 3
i^^4 5
++^^5 7
)^^7 8
{__ 
if`` 
(`` 
string`` 
.`` 
IsNullOrEmpty`` +
(``+ ,
ice``, /
.``/ 0
Rows``0 4
[``4 5
i``5 6
]``6 7
[``7 8
$str``8 A
]``A B
?``B C
.``C D
ToString``D L
(``L M
)``M N
)``N O
)``O P
continueaa  
;aa  !
varbb 
matchbb 
=bb 
repeatedbb  (
.bb( )
FirstOrDefaultbb) 7
(bb7 8
xbb8 9
=>bb: <
icebb= @
.bb@ A
RowsbbA E
[bbE F
ibbF G
]bbG H
[bbH I
$strbbI R
]bbR S
.bbS T
ToStringbbT \
(bb\ ]
)bb] ^
==bb_ a
xcc1 2
[cc2 3
$strcc3 <
]cc< =
.cc= >
ToStringcc> F
(ccF G
)ccG H
)ccH I
;ccI J
ifdd 
(dd 
matchdd 
!=dd  
nulldd! %
)dd% &
{ee 
iceff 
.ff 
Rowsff  
.ff  !
Removeff! '
(ff' (
matchff( -
)ff- .
;ff. /
continuegg  
;gg  !
}hh 
ifii 
(ii 
!ii 
stringii 
.ii  
IsNullOrEmptyii  -
(ii- .
iceii. 1
.ii1 2
Rowsii2 6
[ii6 7
iii7 8
]ii8 9
[ii9 :
$strii: C
]iiC D
?iiD E
.iiE F
ToStringiiF N
(iiN O
)iiO P
)iiP Q
)iiQ R
{jj 
repeatedkk  
.kk  !
AddLastkk! (
(kk( )
icekk) ,
.kk, -
Rowskk- 1
[kk1 2
ikk2 3
]kk3 4
)kk4 5
;kk5 6
}ll 
}mm 
}nn 
whilenn 
(nn 
loopnn 
--nn 
>nn 
$numnn 
)nn  
;nn  !
returnoo 
iceoo 
;oo 
}pp 	
}qq 
}rr êC
kC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Database\DBConnector.cs
	namespace

 	
OverWatcher


 
.

 
TradeReconMonitor

 '
.

' (
Core

( ,
{ 
sealed 

class 
DBConnector 
: 
IDisposable )
{ 
private 
static 
readonly 
string  &
Hostname' /
=0 1 
ConfigurationManager2 F
.F G
AppSettingsG R
[R S
$strS _
]_ `
;` a
private 
static 
readonly 
string  &
Port' +
=, - 
ConfigurationManager. B
.B C
AppSettingsC N
[N O
$strO W
]W X
;X Y
private 
static 
readonly 
string  &
Username' /
=0 1 
ConfigurationManager2 F
.F G
AppSettingsG R
[R S
$strS _
]_ `
;` a
private 
static 
readonly 
string  &
Pwd' *
=+ , 
ConfigurationManager- A
.A B
AppSettingsB M
[M N
$strN Z
]Z [
;[ \
private 
static 
readonly 
string  &
SID' *
=+ , 
ConfigurationManager- A
.A B
AppSettingsB M
[M N
$strN U
]U V
;V W
private 
OracleConnection  

connection! +
=, -
null. 2
;2 3
~ 	
DBConnector	 
( 
) 
{ 	
Dispose 
( 
) 
; 
} 	
public 
DBConnector 
( 
) 
{ 	

connection 
= 
BuildConnection (
(( )
)) *
;* +
} 	
private 
static 
OracleConnection '
BuildConnection( 7
(7 8
)8 9
{ 	
string   
connectionString   #
=  $ %
string  & ,
.  , -
Format  - 3
(  3 4 
ConfigurationManager!!' ;
.!!; <
ConnectionStrings!!< M
[!!M N
$str!!N f
]!!f g
.!!g h
ConnectionString!!h x
,!!x y
Username""' /
,""/ 0
Pwd##' *
,##* +
Hostname$$' /
,$$/ 0
Port%%' +
.%%+ ,
ToString%%, 4
(%%4 5
)%%5 6
,%%6 7
SID&&' *
)'' 
;'' 
OracleConnection(( 

connection(( '
=((( )
new((* -
OracleConnection((. >
(((> ?
)((? @
;((@ A

connection)) 
.)) 
ConnectionString)) '
=))( )
connectionString))* :
;)): ;
try++ 
{,, 

connection-- 
.-- 
Open-- 
(--  
)--  !
;--! "
}.. 
catch// 
(// 
OracleException// "
ex//# %
)//% &
{00 
Logger11 
.11 
Error11 
(11 
ex11 
.11  
ToString11  (
(11( )
)11) *
)11* +
;11+ ,

connection22 
.22 
Dispose22 "
(22" #
)22# $
;22$ %

connection33 
=33 
null33 !
;33! "
throw44 
ex44 
;44 
}55 
return66 

connection66 
;66 
}77 	
public88 
	DataTable88 
	MakeQuery88 "
(88" #
string88# )
query88* /
,88/ 0
string881 7
	tableName888 A
)88A B
{99 	
OracleCommand:: 
cmd:: 
=:: 
new::  #
OracleCommand::$ 1
(::1 2
)::2 3
;::3 4
	DataTable;; 
	dataTable;; 
=;;  !
new;;" %
	DataTable;;& /
(;;/ 0
);;0 1
;;;1 2
	dataTable<< 
.<< 
	TableName<< 
=<<  !
	tableName<<" +
;<<+ ,
try== 
{>> 
if?? 
(?? 

connection?? 
!=?? !
null??" &
)??& '
{@@ 
cmdAA 
.AA 

ConnectionAA "
=AA# $

connectionAA% /
;AA/ 0
cmdBB 
.BB 
CommandTextBB #
=BB$ %
queryBB& +
;BB+ ,
cmdCC 
.CC 
CommandTypeCC #
=CC$ %
CommandTypeCC& 1
.CC1 2
TextCC2 6
;CC6 7
OracleDataReaderDD $
readerDD% +
=DD, -
cmdDD. 1
.DD1 2
ExecuteReaderDD2 ?
(DD? @
)DD@ A
;DDA B
varEE 
columnsEE 
=EE  !
newEE" %
ListEE& *
<EE* +
stringEE+ 1
>EE1 2
(EE2 3
)EE3 4
;EE4 5
forFF 
(FF 
intFF 
iFF 
=FF  
$numFF! "
;FF" #
iFF$ %
<FF& '
readerFF( .
.FF. /

FieldCountFF/ 9
;FF9 :
iFF; <
++FF< >
)FF> ?
{GG 
stringHH 
colHH "
=HH# $
readerHH% +
.HH+ ,
GetNameHH, 3
(HH3 4
iHH4 5
)HH5 6
;HH6 7
columnsII 
.II  
AddII  #
(II# $
colII$ '
)II' (
;II( )
	dataTableJJ !
.JJ! "
ColumnsJJ" )
.JJ) *
AddJJ* -
(JJ- .
colJJ. 1
)JJ1 2
;JJ2 3
}KK 
ifLL 
(LL 
readerLL 
.LL 
HasRowsLL &
)LL& '
{MM 
whileNN 
(NN 
readerNN %
.NN% &
ReadNN& *
(NN* +
)NN+ ,
)NN, -
{OO 
varPP 
rowPP  #
=PP$ %
	dataTablePP& /
.PP/ 0
NewRowPP0 6
(PP6 7
)PP7 8
;PP8 9
foreachQQ #
(QQ# $
stringQQ$ *
colQQ+ .
inQQ/ 1
columnsQQ2 9
)QQ9 :
{RR 
rowSS  #
[SS# $
colSS$ '
]SS' (
=SS) *
readerSS+ 1
[SS1 2
colSS2 5
]SS5 6
;SS6 7
}TT 
	dataTableUU %
.UU% &
RowsUU& *
.UU* +
AddUU+ .
(UU. /
rowUU/ 2
)UU2 3
;UU3 4
}VV 
}WW 
returnXX 
	dataTableXX $
;XX$ %
}YY 
else[[ 
{\\ 
throw]] 
new]] "
MissingMemberException]] 4
(]]4 5
$str]]5 Q
)]]Q R
;]]R S
}^^ 
}__ 
catch`` 
(`` 
	Exception`` 
ex`` 
)`` 
{aa 
throwbb 
newbb %
OracleQueryAbortExceptionbb 3
(bb3 4
exbb4 6
.bb6 7
ToStringbb7 ?
(bb? @
)bb@ A
)bbA B
;bbB C
}cc 
}ee 	
privatehh 
boolhh 
disposedValuehh "
=hh# $
falsehh% *
;hh* +
voidjj 
Disposejj 
(jj 
booljj 
	disposingjj #
)jj# $
{kk 	
ifll 
(ll 
!ll 
disposedValuell 
)ll 
{mm 
ifnn 
(nn 
	disposingnn 
)nn 
{oo 

connectionqq 
?qq 
.qq  
Disposeqq  '
(qq' (
)qq( )
;qq) *

connectionrr 
?rr 
.rr  
Closerr  %
(rr% &
)rr& '
;rr' (
}ss 
disposedValuexx 
=xx 
truexx  $
;xx$ %
}yy 
}zz 	
public
 
void
 
Dispose
 
(
 
)
 
{
 	
Dispose
 
(
 
true
 
)
 
;
 
}
 	
}
 
} ²O
dC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\HTMLGenerator.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{		 
class

 	
HTMLGenerator


 
{ 
public 
static 
string 
CountToHTML (
(( )
string) /
source0 6
,6 7
int8 ;
swap< @
,@ A
intB E
futuresF M
)M N
{ 	
StringBuilder 
builder !
=" #
new$ '
StringBuilder( 5
(5 6
)6 7
;7 8
builder 
. 
Append 
( 
$str #
)# $
;$ %
builder 
. 
Append 
( 
$str #
)# $
;$ %
builder 
. 
Append 
( 
$str $
)$ %
;% &
builder 
. 
Append 
( 
$str "
)" #
;# $
builder 
. 
Append 
( 
Guid 
.  
NewGuid  '
(' (
)( )
)) *
;* +
builder 
. 
Append 
( 
$str %
)% &
;& '
builder 
. 
Append 
( 
$str $
)$ %
;% &
builder 
. 
Append 
( 
$str #
)# $
;$ %
builder 
. 
Append 
( 
$str Q
)Q R
;R S
builder 
. 
Append 
( 
$str f
)f g
;g h
builder 
. 
Append 
( 
$str ?
+@ A
$str S
+T U
$str !
+" #
source$ *
++ ,
$str- D
)D E
;E F
builder 
. 
Append 
( 
$str ;
); <
;< =
builder 
. 
Append 
( 
$str S
)S T
;T U
builder   
.   
Append   
(   
$str   !
)  ! "
;  " #
builder!! 
.!! 
Append!! 
(!! 
$str!! &
)!!& '
;!!' (
builder"" 
."" 
Append"" 
("" 
$str"" S
)""S T
;""T U
builder## 
.## 
Append## 
(## 
$str## (
)##( )
;##) *
builder$$ 
.$$ 
Append$$ 
($$ 
$str$$ &
)$$& '
;$$' (
builder%% 
.%% 
Append%% 
(%% 
$str%% "
)%%" #
;%%# $
builder'' 
.'' 
Append'' 
('' 
$str'' ;
)''; <
;''< =
builder(( 
.(( 
Append(( 
((( 
$str(( ;
)((; <
;((< =
builder)) 
.)) 
Append)) 
()) 
$str)) !
)))! "
;))" #
builder** 
.** 
Append** 
(** 
$str** "
)**" #
;**# $
builder++ 
.++ 
Append++ 
(++ 
$str++ :
)++: ;
;++; <
builder,, 
.,, 
Append,, 
(,, 
swap,, 
),,  
;,,  !
builder-- 
.-- 
Append-- 
(-- 
$str-- "
)--" #
;--# $
builder.. 
... 
Append.. 
(.. 
$str.. "
).." #
;..# $
builder00 
.00 
Append00 
(00 
$str00 ;
)00; <
;00< =
builder11 
.11 
Append11 
(11 
$str11 ;
)11; <
;11< =
builder22 
.22 
Append22 
(22 
$str22 $
)22$ %
;22% &
builder33 
.33 
Append33 
(33 
$str33 "
)33" #
;33# $
builder44 
.44 
Append44 
(44 
$str44 :
)44: ;
;44; <
builder55 
.55 
Append55 
(55 
futures55 "
)55" #
;55# $
builder66 
.66 
Append66 
(66 
$str66 "
)66" #
;66# $
builder77 
.77 
Append77 
(77 
$str77 "
)77" #
;77# $
builder99 
.99 
Append99 
(99 
$str99 %
)99% &
;99& '
builder:: 
.:: 
Append:: 
(:: 
$str:: $
)::$ %
;::% &
builder;; 
.;; 
Append;; 
(;; 
$str;; $
);;$ %
;;;% &
return== 
builder== 
.== 
ToString== #
(==# $
)==$ %
;==% &
}>> 	
public@@ 
static@@ 
string@@ 
DataTableToHTML@@ ,
(@@, -
	DataTable@@- 6
dt@@7 9
)@@9 :
{AA 	
ifBB 
(BB 
dtBB 
.BB 
RowsBB 
.BB 
CountBB 
==BB  
$numBB! "
)BB" #
returnBB$ *
$strBB+ -
;BB- .
StringBuilderDD 
builderDD !
=DD" #
newDD$ '
StringBuilderDD( 5
(DD5 6
)DD6 7
;DD7 8
builderEE 
.EE 
AppendEE 
(EE 
$strEE #
)EE# $
;EE$ %
builderFF 
.FF 
AppendFF 
(FF 
$strFF #
)FF# $
;FF$ %
builderGG 
.GG 
AppendGG 
(GG 
$strGG $
)GG$ %
;GG% &
builderHH 
.HH 
AppendHH 
(HH 
$strHH "
)HH" #
;HH# $
builderII 
.II 
AppendII 
(II 
GuidII 
.II  
NewGuidII  '
(II' (
)II( )
)II) *
;II* +
builderJJ 
.JJ 
AppendJJ 
(JJ 
$strJJ %
)JJ% &
;JJ& '
builderKK 
.KK 
AppendKK 
(KK 
$strKK $
)KK$ %
;KK% &
builderLL 
.LL 
AppendLL 
(LL 
$strLL #
)LL# $
;LL$ %
builderMM 
.MM 
AppendMM 
(MM 
$strMM Q
)MMQ R
;MMR S
builderNN 
.NN 
AppendNN 
(NN 
$strNN f
)NNf g
;NNg h
builderOO 
.OO 
AppendOO 
(OO 
$strOO ?
+OO@ A
$strPP J
+PPK L
dtQQ 
.QQ 
	TableNameQQ 
+QQ 
$strQQ /
)QQ/ 0
;QQ0 1
builderRR 
.RR 
AppendRR 
(RR 
$strRR ;
)RR; <
;RR< =
foreachSS 
(SS 

DataColumnSS 
cSS  !
inSS" $
dtSS% '
.SS' (
ColumnsSS( /
)SS/ 0
{TT 
builderUU 
.UU 
AppendUU 
(UU 
$strUU B
)UUB C
;UUC D
builderVV 
.VV 
AppendVV 
(VV 
cVV  
.VV  !

ColumnNameVV! +
.VV+ ,
ToStringVV, 4
(VV4 5
)VV5 6
)VV6 7
;VV7 8
builderWW 
.WW 
AppendWW 
(WW 
$strWW *
)WW* +
;WW+ ,
}XX 
builderYY 
.YY 
AppendYY 
(YY 
$strYY "
)YY" #
;YY# $
foreachZZ 
(ZZ 
DataRowZZ 
rZZ 
inZZ !
dtZZ" $
.ZZ$ %
RowsZZ% )
)ZZ) *
{[[ 
builder\\ 
.\\ 
Append\\ 
(\\ 
$str\\ ?
)\\? @
;\\@ A
foreach]] 
(]] 

DataColumn]] #
c]]$ %
in]]& (
dt]]) +
.]]+ ,
Columns]], 3
)]]3 4
{^^ 
builder__ 
.__ 
Append__ "
(__" #
$str__# C
)__C D
;__D E
builder`` 
.`` 
Append`` "
(``" #
r``# $
[``$ %
c``% &
.``& '

ColumnName``' 1
]``1 2
.``2 3
ToString``3 ;
(``; <
)``< =
)``= >
;``> ?
builderaa 
.aa 
Appendaa "
(aa" #
$straa# *
)aa* +
;aa+ ,
}bb 
buildercc 
.cc 
Appendcc 
(cc 
$strcc &
)cc& '
;cc' (
}dd 
builderee 
.ee 
Appendee 
(ee 
$stree %
)ee% &
;ee& '
builderff 
.ff 
Appendff 
(ff 
$strff $
)ff$ %
;ff% &
buildergg 
.gg 
Appendgg 
(gg 
$strgg $
)gg$ %
;gg% &
returnii 
builderii 
.ii 
ToStringii #
(ii# $
)ii$ %
;ii% &
}jj 	
}kk 
}ll 

yC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Monitor\Exception\MonitorException.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
class		 	%
OracleQueryAbortException		
 #
:		$ %
	Exception		& /
{

 
public %
OracleQueryAbortException (
(( )
string) /
msg0 3
)3 4
:5 6
base7 ;
(; <
msg< ?
)? @
{A B
}C D
} 
class 	
MonitorException
 
: 
	Exception &
{ 
public 
MonitorException 
(  
string  &
msg' *
)* +
:, -
base. 2
(2 3
msg3 6
)6 7
{8 9
}: ;
public 
MonitorException 
(  
string  &
msg' *
,* +
	Exception, 5
ex6 8
)8 9
:: ;
base< @
(@ A
msgA D
,D E
exF H
)H I
{J K
}L M
} 
} º!
pC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Monitor\OpenLinkDBMonitor.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{		 
class

 	
OracleDBMonitor


 
:

 
ITradeMonitor

 )
{ 
public 
int 
Futures 
{ 
get  
;  !
private" )
set* -
;- .
}/ 0
public 
int 
Swap 
{ 
get 
; 
private &
set' *
;* +
}, -
public 
string 
MonitorTitle "
{ 	
get 
{ 
return 
$str &
;& '
} 
} 	
public 
List 
< 
	DataTable 
> 
QueryDB &
(& '
)' (
{ 	
Logger 
. 
Info 
( 
$str 5
)5 6
;6 7
var 
dtList 
= 
new 
List !
<! "
	DataTable" +
>+ ,
(, -
)- .
;. /
using 
( 
DBConnector 
db !
=" #
new$ '
DBConnector( 3
(3 4
)4 5
)5 6
{ 
foreach 
( 
CompanyName $
company% ,
in- /
Enum0 4
.4 5
	GetValues5 >
(> ?
typeof? E
(E F
CompanyNameF Q
)Q R
)R S
)S T
{ 
foreach 
( 
ProductType (
product) 0
in1 3
Enum4 8
.8 9
	GetValues9 B
(B C
typeofC I
(I J
ProductTypeJ U
)U V
)V W
)W X
{   
string!! 
name!! #
=!!$ %
company!!& -
.!!- .
ToString!!. 6
(!!6 7
)!!7 8
+!!9 :
product!!; B
.!!B C
ToString!!C K
(!!K L
)!!L M
;!!M N
dtList"" 
."" 
Add"" "
(""" #
db""# %
.""% &
	MakeQuery""& /
(""/ 0 
ConfigurationManager""0 D
.""D E
AppSettings""E P
[""P Q
name""Q U
+""V W
$str""X _
]""_ `
,""` a
name""b f
)""f g
)""g h
;""h i
if## 
(## 
product## "
==### %
ProductType##& 1
.##1 2
Futures##2 9
)##9 :
{$$ 
Futures%% #
+=%%$ &
dtList%%' -
.%%- .
Last%%. 2
(%%2 3
)%%3 4
.%%4 5
Rows%%5 9
.%%9 :
Count%%: ?
;%%? @
}&& 
else'' 
{(( 
Swap))  
+=))! #
dtList))$ *
.))* +
Last))+ /
())/ 0
)))0 1
.))1 2
Rows))2 6
.))6 7
Count))7 <
;))< =
}** 
}++ 
},, 
}-- 
return.. 
dtList.. 
;.. 
}// 	
public11 
string11 
CountToHTML11 !
(11! "
)11" #
{22 	
return44 
HTMLGenerator44  
.44  !
CountToHTML44! ,
(44, -
MonitorTitle44- 9
,449 :
Swap44; ?
,44? @
Futures44A H
)44H I
;44I J
}55 	
public77 
void77 
LogCount77 
(77 
)77 
{88 	
Logger99 
.99 
Info99 
(99 
MonitorTitle99 $
+99% &
$str99' 7
+998 9
Futures99: A
+::  !
$str::" '
+;;  !
$str;;" 2
+;;3 4
Swap;;5 9
);;9 :
;;;: ;
}<< 	
}== 
}>> å
nC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Monitor\WebTradeMonitor.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
public 

enum 
ProductType 
{ 
Swap "
," #
Futures$ +
}, -
;- .
public 

enum 
CompanyName 
{ 
CBNA "
," #
CGML$ (
}) *
;* +
class 	
WebTradeMonitor
 
: 
WebControllerBase -
,- .
ITradeMonitor. ;
{ 
private 
static 
string 
projectPath )
=* +
Path, 0
.0 1
GetDirectoryName1 A
(A B
SystemB H
.H I

ReflectionI S
.S T
AssemblyT \
.\ ]
GetEntryAssembly] m
(m n
)n o
.o p
Locationp x
)x y
;y z
private 
string 
_url 
=  
ConfigurationManager 2
.2 3
AppSettings3 >
[> ?
$str? J
]J K
;K L
private 

Dictionary 
< 
string !
,! "
string# )
>) *
_nameMap+ 3
=4 5
new6 9

Dictionary: D
<D E
stringE K
,K L
stringM S
>S T
{ 	
{ 
$str 
, 
$str %
}& '
,' (
{ 
$str ?
,? @
$strA G
}G H
} 	
;	 

public   
WebTradeMonitor   
(   
)    
:  ! "
base  # '
(  ' ( 
ConfigurationManager  ( <
.  < =
AppSettings  = H
[  H I
$str  I Y
]  Y Z
)  Z [
{!! 	
BrowserList"" 
."" 
Add"" 
("" 
AnalyzeWebsite"" *
)""* +
;""+ ,
}## 	
public%% 
int%% 
Futures%% 
{%% 
get%%  
;%%  !
private%%" )
set%%* -
;%%- .
}%%/ 0
public'' 
int'' 
Swap'' 
{'' 
get'' 
;'' 
private'' &
set''' *
;''* +
}'', -
public)) 
string)) 
MonitorTitle)) "
{** 	
get++ 
{,, 
return-- 
$str-- !
;--! "
}.. 
}// 	
private22 
void22 
BuildPostLoad22 "
(22" #
out22# &
string22' -
post22. 2
,222 3
string224 :
otp22; >
)22> ?
{33 	
post44 
=44 
$str55 
+55  ! 
ConfigurationManager55" 6
.556 7
AppSettings557 B
[55B C
$str55C M
]55M N
+66 
$str66 .
+66/ 0 
ConfigurationManager661 E
.66E F
AppSettings66F Q
[66Q R
$str66R \
]66\ ]
+77 
$str77 E
+77F G
(77H I
otp77I L
??77M O
String77P V
.77V W
Empty77W \
)77\ ]
+77^ _
$str77` e
;77e f
}88 	
private;; 
string;; 

Urlpostfix;; !
(;;! "
);;" #
{<< 	
return== 
$str== 
+== 
Math== 
.==  
Floor==  %
(==% &
DateTime==& .
.==. /
Now==/ 2
.==2 3
ToUniversalTime==3 B
(==B C
)==C D
.==D E
Subtract==E M
(==M N
new>> 
DateTime>>  (
(>>( )
$num>>) -
,>>- .
$num>>/ 0
,>>0 1
$num>>2 3
,>>3 4
$num>>5 6
,>>6 7
$num>>8 9
,>>9 :
$num>>; <
,>>< =
DateTimeKind>>> J
.>>J K
Utc>>K N
)>>N O
)??  !
.??! "
TotalMilliseconds??" 3
)??3 4
.??4 5
ToString??5 =
(??= >
)??> ?
;??? @
}@@ 	
privateBB 
CookieContainerBB 
RequestSSOCookieBB  0
(BB0 1
)BB1 2
{CC 	
tryDD 
{EE 
varFF 
cookiesFF 
=FF 
ReadCookiesFromDiskFF 1
(FF1 2
nullFF2 6
)FF6 7
;FF7 8
HttpWebResponseGG 
responseGG  (
;GG( )
ifII 
(II 
nullII 
!=II 
cookiesII #
)II# $
{JJ 
varKK 
cookieKK 
=KK  
newKK! $
CookieContainerKK% 4
(KK4 5
)KK5 6
;KK6 7
cookieLL 
.LL 

SetCookiesLL %
(LL% &
newLL& )
UriLL* -
(LL- .
_urlLL. 2
)LL2 3
,LL3 4
cookiesLL5 <
)LL< =
;LL= >
responseMM 
=MM 
MakeHttpRequestMM .
(MM. /
_urlMM/ 3
+NN  
ConfigurationManagerNN .
.NN. /
AppSettingsNN/ :
[NN: ;
$strNN; I
]NNI J
+OO 

UrlpostfixOO $
(OO$ %
)OO% &
,OO& '
nullOO( ,
,OO, -
cookieOO. 4
)OO4 5
;OO5 6
ifPP 
(PP 
GetResponseStringPP )
(PP) *
responsePP* 2
)PP2 3
.PP3 4
ContainsPP4 <
(PP< =
$strPP= J
)PPJ K
)PPK L
{QQ 
responseRR  
.RR  !
CloseRR! &
(RR& '
)RR' (
;RR( )
returnSS 
cookieSS %
;SS% &
}TT 
elseUU 
{VV 
FileWW 
.WW 
DeleteWW #
(WW# $
_defaultCookiePathWW$ 6
)WW6 7
;WW7 8
OutputToXX  
(XX  ! 
ConfigurationManagerXX! 5
.XX5 6
AppSettingsXX6 A
[XXA B
$strXXB Z
]XXZ [
,XX[ \ 
ConfigurationManagerYY 0
.YY0 1
AppSettingsYY1 <
[YY< =
$strYY= U
]YYU V
)YYV W
;YYW X
}ZZ 
response[[ 
.[[ 
Close[[ "
([[" #
)[[# $
;[[$ %
}\\ 
DateTime__ 
requestTime__ $
=__% &
DateTime__' /
.__/ 0
Now__0 3
;__3 4
string`` 
SSOUrl`` 
=``  
ConfigurationManager``  4
.``4 5
AppSettings``5 @
[``@ A
$str``A I
]``I J
;``J K
stringaa 
postaa 
=aa 
$straa  
;aa  !
BuildPostLoadbb 
(bb 
outbb !
postbb" &
,bb& '
nullbb( ,
)bb, -
;bb- .
bytecc 
[cc 
]cc 
encodedPostcc "
=cc# $
Systemcc% +
.cc+ ,
Textcc, 0
.cc0 1
Encodingcc1 9
.cc9 :
UTF8cc: >
.cc> ?
GetBytescc? G
(ccG H
postccH L
)ccL M
;ccM N
responsedd 
=dd 
MakeHttpRequestdd *
(dd* +
_urldd+ /
+dd0 1
SSOUrldd2 8
+dd9 :

Urlpostfixdd; E
(ddE F
)ddF G
,ddG H
encodedPostddI T
,ddT U
nullddV Z
)ddZ [
;dd[ \
ifee 
(ee 
GetResponseStringee %
(ee% &
responseee& .
)ee. /
.ee/ 0
Containsee0 8
(ee8 9
$stree9 U
)eeU V
)eeV W
{ff 
Loggergg 
.gg 
Infogg 
(gg  
$strgg  C
)ggC D
;ggD E
stringhh 
otphh 
=hh  
$strhh! #
;hh# $
usingii 
(ii 
EmailControllerii *
emailii+ 0
=ii1 2
newii3 6
EmailControllerii7 F
(iiF G
)iiG H
)iiH I
{jj 
otpkk 
=kk 
emailkk #
.kk# $
GetOTPkk$ *
(kk* +
requestTimekk+ 6
)kk6 7
.kk7 8
ToStringkk8 @
(kk@ A
)kkA B
;kkB C
}ll 
ifmm 
(mm 
otpmm 
==mm 
$strmm  
)mm  !
{nn 
Loggeroo 
.oo 
Infooo #
(oo# $
$stroo$ 7
)oo7 8
;oo8 9
otppp 
=pp 
Consolepp %
.pp% &
ReadLinepp& .
(pp. /
)pp/ 0
;pp0 1
}qq 
elserr 
{ss 
Loggertt 
.tt 
Infott #
(tt# $
$strtt$ H
)ttH I
;ttI J
}uu 
responsevv 
.vv 
Closevv "
(vv" #
)vv# $
;vv$ %
BuildPostLoadww !
(ww! "
outww" %
postww& *
,ww* +
otpww, /
)ww/ 0
;ww0 1
encodedPostxx 
=xx  !
Systemxx" (
.xx( )
Textxx) -
.xx- .
Encodingxx. 6
.xx6 7
UTF8xx7 ;
.xx; <
GetBytesxx< D
(xxD E
postxxE I
)xxI J
;xxJ K
responseyy 
=yy 
MakeHttpRequestyy .
(yy. /
_urlyy/ 3
+yy4 5
SSOUrlyy6 <
+yy= >

Urlpostfixyy? I
(yyI J
)yyJ K
,yyK L
encodedPostyyM X
,yyX Y
nullyyZ ^
)yy^ _
;yy_ `
}zz 
CookieContainer{{ 

collection{{  *
={{+ ,
new{{- 0
CookieContainer{{1 @
({{@ A
){{A B
;{{B C
string|| 
sso|| 
=|| 
GetCookieHeader|| ,
(||, -
response||- 5
)||5 6
;||6 7
if}} 
(}} 
!}} 
sso}} 
.}} 
Contains}} !
(}}! "
$str}}" 0
)}}0 1
)}}1 2
return}}3 9
RequestSSOCookie}}: J
(}}J K
)}}K L
;}}L M
WriteCookiesToDisk~~ "
(~~" #
null~~# '
,~~' (
sso~~) ,
)~~, -
;~~- .

collection 
. 

SetCookies %
(% &
new& )
Uri* -
(- .
_url. 2
)2 3
,3 4
sso5 8
)8 9
;9 :
response
 
.
 
Close
 
(
 
)
  
;
  !
Logger
 
.
 
Info
 
(
 
$str
 1
)
1 2
;
2 3
return
 

collection
 !
;
! "
}
 
catch
 
(
 
	Exception
 
ex
 
)
  
{
 
throw
 
new
 
MonitorException
 *
(
* +
$str
+ F
,
F G
ex
H J
)
J K
;
K L
}
 
}
 	
private
 
void
 
AnalyzeWebsite
 #
(
# $
)
$ %
{
 	
try
 
{
 
var
 
cookieManager
 !
=
" #
Cef
$ '
.
' ($
GetGlobalCookieManager
( >
(
> ?
)
? @
;
@ A
var
 
cookie
 
=
 
new
  
CefSharp
! )
.
) *
Cookie
* 0
(
0 1
)
1 2
;
2 3
var
 
cookies
 
=
 
RequestSSOCookie
 .
(
. /
)
/ 0
.
0 1

GetCookies
1 ;
(
; <
new
< ?
Uri
@ C
(
C D
_url
D H
)
H I
)
I J
;
J K
string
 
cookie_string
 $
=
% &
string
' -
.
- .
Empty
. 3
;
3 4
foreach
 
(
 
System
 
.
  
Net
  #
.
# $
Cookie
$ *
cook
+ /
in
0 2
cookies
3 :
)
: ;
{
 
cookieManager
 !
.
! "
SetCookieAsync
" 0
(
0 1
_url
1 5
+
6 7
$str
8 S
,
S T
ConvertCookie
 %
(
% &
cook
& *
)
* +
)
+ ,
;
, -
}
 
var
 
browser
 
=
 
new
 ! 
ChromiumWebBrowser
" 4
(
4 5
_url
5 9
+
: ;
$str
< W
)
W X
;
X Y
browser
 
.
 
DownloadHandler
 '
=
( )
new
* -
DownloadHandler
. =
(
= >
this
> B
)
B C
;
C D
browser
 
.
 !
LoadingStateChanged
 +
+=
, .
AnalyzePage
/ :
;
: ;"
_pageAnalyzeFinished
 $
.
$ %
WaitOne
% ,
(
, -
)
- .
;
. /
browser
   
.
   
Dispose
   
(
    
)
    !
;
  ! "
System
¡¡ 
.
¡¡ 
Windows
¡¡ 
.
¡¡ 
Forms
¡¡ $
.
¡¡$ %
Application
¡¡% 0
.
¡¡0 1

ExitThread
¡¡1 ;
(
¡¡; <
)
¡¡< =
;
¡¡= >
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
¤¤ 
Logger
¥¥ 
.
¥¥ 
Error
¥¥ 
(
¥¥ 
ex
¥¥ 
,
¥¥  
$str
¥¥! 4
)
¥¥4 5
;
¥¥5 6
isError
¦¦ 
=
¦¦ 
true
¦¦ 
;
¦¦ 
}
§§ 
}
¨¨ 	
private
©© 
async
©© 
void
©© 
AnalyzePage
©© &
(
©©& '
object
©©' -
s
©©. /
,
©©/ 0*
LoadingStateChangedEventArgs
©©1 M
e
©©N O
)
©©O P
{
ªª 	
var
«« 
wb
«« 
=
«« 
s
«« 
as
««  
ChromiumWebBrowser
«« ,
;
««, -
if
¬¬ 
(
¬¬ 
await
¬¬ 
IsPageLoading
¬¬ #
(
¬¬# $
wb
¬¬$ &
,
¬¬& '
e
¬¬( )
)
¬¬) *
)
¬¬* +
return
¬¬, 2
;
¬¬2 3
Logger
­­ 
.
­­ 
Info
­­ 
(
­­ 
$str
­­ +
)
­­+ ,
;
­­, -
DateTime
®® 
now
®® 
=
®® 
DateTimeHelper
®® )
.
®®) *
ZoneNow
®®* 1
;
®®1 2
var
¯¯ 

scriptTask
¯¯ 
=
¯¯ 
await
¯¯ "
wb
¯¯# %
.
¯¯% &!
EvaluateScriptAsync
¯¯& 9
(
¯¯9 :
$str
°° E
+
±± 
now
±± 
.
±± 
ToString
±± 
(
±±  
$str
±±  -
)
±±- .
+
±±/ 0
$str
±±1 4
)
±±4 5
;
±±5 6

scriptTask
²² 
=
²² 
await
²² 
wb
²² !
.
²²! "!
EvaluateScriptAsync
²²" 5
(
²²5 6
$str
³³ G
+
´´ 
now
´´ 
.
´´ 
ToString
´´ #
(
´´# $
$str
´´$ 1
)
´´1 2
+
´´3 4
$str
´´5 8
)
´´8 9
;
´´9 :
for
µµ 
(
µµ 
int
µµ 
i
µµ 
=
µµ 
$num
µµ 
;
µµ 
i
µµ 
<
µµ 
$num
µµ  !
;
µµ! "
++
µµ# %
i
µµ% &
)
µµ& '
{
¶¶ 
int
·· 
temp
·· 
=
·· 
i
·· 
;
·· 

scriptTask
¸¸ 
=
¸¸ 
null
¸¸ !
;
¸¸! "

scriptTask
¹¹ 
=
¹¹ 
await
¹¹ "
wb
¹¹# %
.
¹¹% &!
EvaluateScriptAsync
¹¹& 9
(
¹¹9 :
string
¹¹: @
.
¹¹@ A
Format
¹¹A G
(
¹¹G H
$str
ºº U
,
ººU V
temp
ººW [
)
ºº[ \
)
ºº\ ]
;
ºº] ^
while
»» 
(
»» 
(
»» 
await
»» 
wb
»»  
.
»»  !!
EvaluateScriptAsync
»»! 4
(
»»4 5
string
»»5 ;
.
»»; <
Format
»»< B
(
»»B C
$str
¼¼ ]
,
¼¼] ^
temp
¼¼_ c
)
¼¼c d
)
¼¼d e
)
¼¼e f
.
¼¼f g
Message
¼¼g n
as
¼¼o q
string
¼¼r x
==
¼¼y {
$str¼¼| 
)¼¼ 
;¼¼ 

scriptTask
½½ 
=
½½ 
null
½½ !
;
½½! "

scriptTask
¾¾ 
=
¾¾ 
await
¾¾ "
wb
¾¾# %
.
¾¾% &!
EvaluateScriptAsync
¾¾& 9
(
¾¾9 :
$str¿¿ 
)¿¿ 
;¿¿  
JavascriptResponse
ÀÀ "
waitingTask
ÀÀ# .
=
ÀÀ/ 0
null
ÀÀ1 5
;
ÀÀ5 6
Logger
ÁÁ 
.
ÁÁ 
Info
ÁÁ 
(
ÁÁ 
$str
ÁÁ 1
+
ÁÁ2 3
i
ÁÁ4 5
)
ÁÁ5 6
;
ÁÁ6 7
while
ÂÂ 
(
ÂÂ 
string
ÂÂ 
.
ÂÂ 
IsNullOrEmpty
ÂÂ +
(
ÂÂ+ ,
(
ÂÂ, -
waitingTask
ÂÂ- 8
?
ÂÂ8 9
.
ÂÂ9 :
Result
ÂÂ: @
as
ÂÂA C
string
ÂÂD J
)
ÂÂJ K
)
ÂÂK L
)
ÂÂL M
{
ÃÃ 
waitingTask
ÅÅ 
=
ÅÅ  !
await
ÅÅ" '
wb
ÅÅ( *
.
ÅÅ* +!
EvaluateScriptAsync
ÅÅ+ >
(
ÅÅ> ?
$str
ÆÆ  T
)
ÆÆT U
;
ÆÆU V
Thread
ÇÇ 
.
ÇÇ 
Sleep
ÇÇ  
(
ÇÇ  !
$num
ÇÇ! $
)
ÇÇ$ %
;
ÇÇ% &
}
ÈÈ 

scriptTask
ÉÉ 
=
ÉÉ 
waitingTask
ÉÉ (
;
ÉÉ( )
string
ÊÊ 
f
ÊÊ 
=
ÊÊ 
(
ÊÊ 

scriptTask
ÊÊ &
.
ÊÊ& '
Result
ÊÊ' -
as
ÊÊ. 0
string
ÊÊ1 7
)
ÊÊ7 8
;
ÊÊ8 9
Futures
ËË 
+=
ËË 
int
ËË 
.
ËË 
Parse
ËË $
(
ËË$ %
f
ËË% &
.
ËË& '
	Substring
ËË' 0
(
ËË0 1
$num
ËË1 2
,
ËË2 3
f
ËË4 5
.
ËË5 6
Length
ËË6 <
-
ËË= >
$num
ËË? @
)
ËË@ A
)
ËËA B
;
ËËB C

scriptTask
ÌÌ 
=
ÌÌ 
null
ÌÌ !
;
ÌÌ! "
while
ÍÍ 
(
ÍÍ 
string
ÍÍ 
.
ÍÍ 
IsNullOrEmpty
ÍÍ +
(
ÍÍ+ ,
(
ÍÍ, -

scriptTask
ÍÍ- 7
?
ÍÍ7 8
.
ÍÍ8 9
Result
ÍÍ9 ?
as
ÍÍ@ B
string
ÍÍC I
)
ÍÍI J
)
ÍÍJ K
)
ÍÍK L
{
ÎÎ 

scriptTask
ÏÏ 
=
ÏÏ  
await
ÏÏ! &
wb
ÏÏ' )
.
ÏÏ) *!
EvaluateScriptAsync
ÏÏ* =
(
ÏÏ= >
$str
ÐÐ P
)
ÐÐP Q
;
ÐÐQ R
Thread
ÑÑ 
.
ÑÑ 
Sleep
ÑÑ  
(
ÑÑ  !
$num
ÑÑ! $
)
ÑÑ$ %
;
ÑÑ% &
}
ÒÒ 
f
ÓÓ 
=
ÓÓ 
(
ÓÓ 

scriptTask
ÓÓ 
.
ÓÓ  
Result
ÓÓ  &
as
ÓÓ' )
string
ÓÓ* 0
)
ÓÓ0 1
;
ÓÓ1 2
Swap
ÔÔ 
+=
ÔÔ 
int
ÔÔ 
.
ÔÔ 
Parse
ÔÔ !
(
ÔÔ! "
f
ÔÔ" #
.
ÔÔ# $
	Substring
ÔÔ$ -
(
ÔÔ- .
$num
ÔÔ. /
,
ÔÔ/ 0
f
ÔÔ1 2
.
ÔÔ2 3
Length
ÔÔ3 9
-
ÔÔ: ;
$num
ÔÔ< =
)
ÔÔ= >
)
ÔÔ> ?
;
ÔÔ? @
if
ÕÕ 
(
ÕÕ "
ConfigurationManager
ÕÕ '
.
ÕÕ' (
AppSettings
ÕÕ( 3
[
ÕÕ3 4
$str
ÕÕ4 Q
]
ÕÕQ R
==
ÕÕS U
$str
ÕÕV \
)
ÕÕ\ ]
{
ÖÖ 
await
××  
SavePageScreenShot
×× ,
(
××, -
wb
××- /
,
××/ 0"
ConfigurationManager
××1 E
.
××E F
AppSettings
××F Q
[
××Q R
$str
××R b
]
××b c
+
××d e
$str
××f }
)
××} ~
;
××~ 
}
ØØ 
wb
ÙÙ 
.
ÙÙ !
LoadingStateChanged
ÙÙ &
-=
ÙÙ' )
AnalyzePage
ÙÙ* 5
;
ÙÙ5 6
await
ÚÚ 
wb
ÚÚ 
.
ÚÚ !
EvaluateScriptAsync
ÚÚ ,
(
ÚÚ, -
$str
ÛÛ V
)
ÛÛV W
;
ÛÛW X
while
ÜÜ 
(
ÜÜ 
!
ÜÜ !
isDownloadCompleted
ÜÜ +
)
ÜÜ+ ,
;
ÜÜ- .

scriptTask
ÝÝ 
=
ÝÝ 
await
ÝÝ "
wb
ÝÝ# %
.
ÝÝ% &!
EvaluateScriptAsync
ÝÝ& 9
(
ÝÝ9 :
string
ÝÝ: @
.
ÝÝ@ A
Format
ÝÝA G
(
ÝÝG H
$str
ÞÞ N
,
ÞÞN O
temp
ÞÞP T
)
ÞÞT U
)
ÞÞU V
;
ÞÞV W
RenameExcel
ßß 
(
ßß 
_nameMap
ßß $
[
ßß$ %
_nameMap
ßß% -
.
ßß- .
Keys
ßß. 2
.
ßß2 3
Where
ßß3 8
(
ßß8 9
key
ßß9 <
=>
ßß= ?

scriptTask
ßß@ J
.
ßßJ K
Result
ßßK Q
.
ßßQ R
ToString
ßßR Z
(
ßßZ [
)
ßß[ \
.
ßß\ ]
Contains
ßß] e
(
ßße f
key
ßßf i
)
ßßi j
)
ßßj k
.
ßßk l
FirstOrDefault
ßßl z
(
ßßz {
)
ßß{ |
]
ßß| }
)
ßß} ~
;
ßß~ !
isDownloadCompleted
àà #
=
àà$ %
false
àà& +
;
àà+ ,
DownloadFileName
áá  
=
áá! "
$str
áá# %
;
áá% &
}
ââ "
_pageAnalyzeFinished
ãã  
.
ãã  !
Set
ãã! $
(
ãã$ %
)
ãã% &
;
ãã& '
}
ää 	
private
ææ 
void
ææ 
RenameExcel
ææ  
(
ææ  !
string
ææ! '
name
ææ( ,
)
ææ, -
{
çç 	
var
èè 

excelFiles
èè 
=
èè 
	Directory
èè &
.
èè& '
GetFiles
èè' /
(
èè/ 0
TempFolderPath
èè0 >
,
èè> ?
$str
èè@ C
+
éé "
ConfigurationManager
éé &
.
éé& '
AppSettings
éé' 2
[
éé2 3
$str
éé3 G
]
ééG H
)
ééH I
.
êê% &
Select
êê& ,
(
êê, -
Path
êê- 1
.
êê1 2
GetFileName
êê2 =
)
êê= >
;
êê> ?
foreach
ëë 
(
ëë 
var
ëë 
file
ëë 
in
ëë  

excelFiles
ëë! +
)
ëë+ ,
{
ìì 
if
íí 
(
íí 
file
íí 
!=
íí 
DownloadFileName
íí ,
)
íí, -
continue
íí. 6
;
íí6 7
System
îî 
.
îî 
IO
îî 
.
îî 
File
îî 
.
îî 
Move
îî #
(
îî# $
TempFolderPath
îî$ 2
+
îî3 4
file
îî5 9
,
îî9 :
TempFolderPath
ïï "
+
ïï# $
Path
ðð 
.
ðð )
GetFileNameWithoutExtension
ðð 4
(
ðð4 5
file
ðð5 9
)
ðð9 :
+
ðð; <
$str
ðð= @
+
ððA B
name
ððC G
+
ññ 
Path
ññ 
.
ññ 
GetExtension
ññ (
(
ññ( )
file
ññ) -
)
ññ- .
)
ññ. /
;
ññ/ 0
}
òò 
}
ôô 	
private
øø 
void
øø 
OutputTo
øø 
(
øø 
string
øø $
futures
øø% ,
,
øø, -
string
øø. 4
cleared
øø5 <
)
øø< =
{
ùù 	
string
úú 

outputPath
úú 
=
úú "
ConfigurationManager
úú  4
.
úú4 5
AppSettings
úú5 @
[
úú@ A
$str
úúA M
]
úúM N
;
úúN O
File
üü 
.
üü 
WriteAllText
üü 
(
üü 

outputPath
üü (
,
üü( )
FormatCount
üü* 5
(
üü5 6
futures
üü6 =
,
üü= >
cleared
üü? F
)
üüF G
)
üüG H
;
üüH I
}
þþ 	
public
ÿÿ 
void
ÿÿ 
OutputCountToFile
ÿÿ %
(
ÿÿ% &
)
ÿÿ& '
{
 	
OutputTo
 
(
 
this
 
.
 
Futures
 !
.
! "
ToString
" *
(
* +
)
+ ,
,
, -
this
. 2
.
2 3
Swap
3 7
.
7 8
ToString
8 @
(
@ A
)
A B
.
B C
Split
C H
(
H I
$str
I L
.
L M
ToCharArray
M X
(
X Y
)
Y Z
)
Z [
.
$ %
Where
% *
(
* +
name
+ /
=>
0 2
!
3 4
string
4 :
.
: ;
IsNullOrEmpty
; H
(
H I
name
I M
)
M N
)
N O
.
O P
FirstOrDefault
P ^
(
^ _
)
_ `
)
` a
;
a b
}
 	
private
 
string
 
FormatCount
 "
(
" #
string
# )
futures
* 1
,
1 2
string
3 9
cleared
: A
)
A B
{
 	
StringBuilder
 
csv
 
=
 
new
  #
StringBuilder
$ 1
(
1 2
)
2 3
;
3 4
csv
 
.
 

AppendLine
 
(
 
$str
 .
)
. /
;
/ 0
csv
 
.
 

AppendLine
 
(
 
string
 !
.
! "
Format
" (
(
( )
$str
) ;
,
; <
cleared
= D
)
D E
)
E F
;
F G
csv
 
.
 

AppendLine
 
(
 
string
 !
.
! "
Format
" (
(
( )
$str
) 5
,
5 6
futures
7 >
)
> ?
)
? @
;
@ A
return
 
csv
 
.
 
ToString
 
(
  
)
  !
;
! "
}
 	
private
 
string
 
FormatCount
 "
(
" #
)
# $
{
 	
return
 
FormatCount
 
(
 
this
 #
.
# $
Futures
$ +
.
+ ,
ToString
, 4
(
4 5
)
5 6
,
6 7
this
8 <
.
< =
Swap
= A
.
A B
ToString
B J
(
J K
)
K L
)
L M
;
M N
}
 	
public
 
string
 
CountToHTML
 !
(
! "
)
" #
{
 	
return
 
HTMLGenerator
  
.
  !
CountToHTML
! ,
(
, -
MonitorTitle
- 9
,
9 :
Swap
; ?
,
? @
Futures
A H
)
H I
;
I J
}
 	
public
 
void
 
LogCount
 
(
 
)
 
{
 	
Logger
 
.
 
Info
 
(
 
MonitorTitle
 $
+
% &
$str
' 7
+
8 9
Futures
: A
+
  !
$str
" '
+
  !
$str
" 2
+
3 4
Swap
5 9
)
9 :
;
: ;
}
 	
}
 
} 
^C:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Program.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
class 	
Program
 
{ 
private 
static 
bool 
EnableComparison ,
;, -
private 
static 
bool 
EnableSaveLocal +
;+ ,
private 
static 
bool 
EnableEmail '
;' (
private 
static 
string 
projectPath )
=* +
Path, 0
.0 1
GetDirectoryName1 A
(A B
SystemB H
.H I

ReflectionI S
.S T
AssemblyT \
.\ ]
GetEntryAssembly] m
(m n
)n o
.o p
Locationp x
)x y
;y z
private 
static 
volatile 
bool  $
IsICESilent% 0
=1 2
true3 7
;7 8
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
Console 
. 
Title 
= 
$str [
;[ \
Start 
( 
args 
) 
; 
Stop 
( 
) 
; 
} 	
public 
static 
void 
Start  
(  !
string! '
[' (
]( )
args* .
). /
{ 	
Console 
. 
	WriteLine 
( 
$str 4
)4 5
;5 6
WebTradeMonitor   
.   !
InitializeEnvironment   1
(  1 2
)  2 3
;  3 4
var!! 
schedule!! 
=!! 
new!! 
Schedule!! '
(!!' ( 
ConfigurationManager!!( <
.!!< =
AppSettings!!= H
[!!H I
$str!!I T
]!!T U
,!!U V 
ConfigurationManager"", @
.""@ A
AppSettings""A L
[""L M
$str""M ]
]""] ^
,""^ _ 
ConfigurationManager##, @
.##@ A
AppSettings##A L
[##L M
$str##M S
]##S T
,##T U 
ConfigurationManager$$, @
.$$@ A
AppSettings$$A L
[$$L M
$str$$M X
]$$X Y
)$$Y Z
;$$Z [
if%% 
(%% 
!%% 
schedule%% 
.%% 
isSingleRun%% %
(%%% &
)%%& '
)%%' (
{&& 
Logger'' 
.'' 
Info'' 
('' 
$str'' 5
)''5 6
;''6 7
int(( 
interval(( 
=(( 
$num((  
;((  !
int)) 
.)) 
TryParse)) 
())  
ConfigurationManager)) 1
.))1 2
AppSettings))2 =
[))= >
$str))> U
]))U V
,))V W
out))X [
interval))\ d
)))d e
;))e f
TaskScheduler** 
	scheduler** '
=**( )
new*** -
TaskScheduler**. ;
(**; <
interval**< D
)**D E
;**E F
	scheduler++ 
.++ 
AddTask++ !
(++! "
(++" #
)++# $
=>++% '
{,, 
StartReconsiliation-- '
(--' (
)--( )
;--) *
}.. 
,.. 
schedule.. 
).. 
;.. 
	scheduler// 
.// 
Start// 
(//  
)//  !
;//! "
while00 
(00 
Console00 
.00 
Read00 #
(00# $
)00$ %
!=00& (
$char00) ,
)00, -
;00. /
}11 
else22 
{33 
Logger44 
.44 
Info44 
(44 
$str44 6
)446 7
;447 8
StartReconsiliation55 #
(55# $
)55$ %
;55% &
Logger66 
.66 
Info66 
(66 
$str66 /
)66/ 0
;660 1
}77 
}99 	
public;; 
static;; 
void;; 
Stop;; 
(;;  
);;  !
{<< 	
WebTradeMonitor== 
.== 
CleanupEnvironment== .
(==. /
)==/ 0
;==0 1
}>> 	
private?? 
static?? 
void?? 
LoadOptions?? '
(??' (
)??( )
{@@ 	
EnableComparisonAA 
=AA  
ConfigurationManagerAA 3
.AA3 4
AppSettingsAA4 ?
[AA? @
$strAA@ R
]AAR S
==AAT V
$strAAW ]
?AA^ _
trueAA` d
:AAe f
falseAAg l
;AAl m
EnableEmailBB 
=BB  
ConfigurationManagerBB .
.BB. /
AppSettingsBB/ :
[BB: ;
$strBB; H
]BBH I
==BBJ L
$strBBM S
?BBT U
trueBBV Z
:BB[ \
falseBB] b
;BBb c
EnableSaveLocalCC 
=CC  
ConfigurationManagerCC 2
.CC2 3
AppSettingsCC3 >
[CC> ?
$strCC? P
]CCP Q
==CCR T
$strCCU [
?CC\ ]
trueCC^ b
:CCc d
falseCCe j
;CCj k
}DD 	
privateEE 
staticEE 
voidEE 
StartReconsiliationEE /
(EE/ 0
)EE0 1
{FF 	
ifGG 
(GG 
!GG 
	DirectoryGG 
.GG 
ExistsGG !
(GG! " 
ConfigurationManagerGG" 6
.GG6 7
AppSettingsGG7 B
[GGB C
$strGGC S
]GGS T
)GGT U
)GGU V
{HH 
	DirectoryII 
.II 
CreateDirectoryII )
(II) * 
ConfigurationManagerII* >
.II> ?
AppSettingsII? J
[IIJ K
$strIIK [
]II[ \
)II\ ]
;II] ^
}JJ 
ifKK 
(KK 
!KK 
	DirectoryKK 
.KK 
ExistsKK !
(KK! " 
ConfigurationManagerKK" 6
.KK6 7
AppSettingsKK7 B
[KKB C
$strKKC U
]KKU V
)KKV W
)KKW X
{LL 
	DirectoryMM 
.MM 
CreateDirectoryMM )
(MM) * 
ConfigurationManagerMM* >
.MM> ?
AppSettingsMM? J
[MMJ K
$strMMK ]
]MM] ^
)MM^ _
;MM_ `
}NN 
ifOO 
(OO 
!OO 
	DirectoryOO 
.OO 
ExistsOO !
(OO! " 
ConfigurationManagerOO" 6
.OO6 7
AppSettingsOO7 B
[OOB C
$strOOC Y
]OOY Z
)OOZ [
)OO[ \
{PP 
	DirectoryQQ 
.QQ 
CreateDirectoryQQ )
(QQ) * 
ConfigurationManagerQQ* >
.QQ> ?
AppSettingsQQ? J
[QQJ K
$strQQK a
]QQa b
)QQb c
;QQc d
}RR 
LoggerSS 
.SS 
InfoSS 
(SS 
stringSS 
.SS 
FormatSS %
(SS% &
$strSS& G
,SSG H
DateTimeTT 
.TT 
NowTT  
.TT  !
ToStringTT! )
(TT) *
$strTT* <
)TT< =
)TT= >
)TT> ?
;TT? @
tryUU 
{VV 
LoadOptionsWW 
(WW 
)WW 
;WW 
WebTradeMonitorXX 
pXX  !
=XX" #
newXX$ '
WebTradeMonitorXX( 7
(XX7 8
)XX8 9
;XX9 :
LoggerYY 
.YY 
InfoYY 
(YY 
$strYY 5
)YY5 6
;YY6 7
CleanUpTempFolderZZ !
(ZZ! "
)ZZ" #
;ZZ# $
p[[ 
.[[ 
run[[ 
([[ 
)[[ 
;[[ 
p\\ 
.\\ 
LogCount\\ 
(\\ 
)\\ 
;\\ 
if]] 
(]] 
IsICESilent]] 
==]]  "
true]]# '
&&]]( *
p]]+ ,
.]], -
Futures]]- 4
+]]5 6
p]]7 8
.]]8 9
Swap]]9 =
>]]> ?
$num]]@ A
)]]A B
{^^ 
Logger__ 
.__ 
Info__ 
(__  
$str__  L
)__L M
;__M N
using`` 
(`` 
EmailController`` *
email``+ 0
=``1 2
new``3 6
EmailController``7 F
(``F G
)``G H
)``H I
{aa 
emailbb 
.bb 
SendResultEmailbb -
(bb- .
pbb. /
.bb/ 0
CountToHTMLbb0 ;
(bb; <
)bb< =
,bb= >
$strcc E
,ccE F
nullccG K
)ccK L
;ccL M
}dd 
IsICESilentee 
=ee  !
falseee" '
;ee' (
}ff 
ifgg 
(gg 
pgg 
.gg 
Futuresgg 
+gg 
pgg  !
.gg! "
Swapgg" &
==gg' )
$numgg* +
)gg+ ,
{hh 
IsICESilentii 
=ii  !
trueii" &
;ii& '
Loggerjj 
.jj 
Infojj 
(jj  
$strjj  Q
)jjQ R
;jjR S
}kk 
usingll 
(ll 
ExcelControllerll &
parserll' -
=ll. /
newll0 3
ExcelControllerll4 C
(llC D
)llD E
)llE F
{mm 
ifoo 
(oo 
!oo 
EnableComparisonoo )
)oo) *
{pp 
Loggerqq 
.qq 
Infoqq #
(qq# $
$strqq$ 9
)qq9 :
;qq: ;
Loggerrr 
.rr 
Inforr #
(rr# $
$strrr$ 8
)rr8 9
;rr9 :
parserss 
.ss 
	SaveAsCSVss (
(ss( )
)ss) *
;ss* +
iftt 
(tt 
!tt 
EnableEmailtt (
)tt( )
{uu 
Loggervv "
.vv" #
Infovv# '
(vv' (
$strvv( @
)vv@ A
;vvA B
pww 
.ww 
OutputCountToFileww /
(ww/ 0
)ww0 1
;ww1 2
}xx 
elseyy 
{zz 
Logger{{ "
.{{" #
Info{{# '
({{' (
$str{{( F
){{F G
;{{G H
using|| !
(||" #
EmailController||# 2
email||3 8
=||9 :
new||; >
EmailController||? N
(||N O
)||O P
)||P Q
{}} 
email~~  %
.~~% &
SendResultEmail~~& 5
(~~5 6
p~~6 7
.~~7 8
CountToHTML~~8 C
(~~C D
)~~D E
,~~E F
$str~~G I
,~~I J
null~~K O
)~~O P
;~~P Q
} 
}
 
}
 
else
 
{
 
Logger
 
.
 
Info
 #
(
# $
$str
$ 9
)
9 :
;
: ;
var
 
	ICEResult
 %
=
& '
parser
( .
.
. /
GetDataTableList
/ ?
(
? @
)
@ A
;
A B
OracleDBMonitor
 '
db
( *
=
+ ,
new
- 0
OracleDBMonitor
1 @
(
@ A
)
A B
;
B C
int
 

queryDelay
 &
=
' (
$num
) *
;
* +
int
 
.
 
TryParse
 $
(
$ %"
ConfigurationManager
% 9
.
9 :
AppSettings
: E
[
E F
$str
F T
]
T U
,
U V
out
W Z

queryDelay
[ e
)
e f
;
f g
Logger
 
.
 
Info
 #
(
# $
string
$ *
.
* +
Format
+ 1
(
1 2
$str
2 f
,
f g

queryDelay
h r
)
r s
)
s t
;
t u
Thread
 
.
 
Sleep
 $
(
$ %

queryDelay
% /
*
0 1
$num
2 6
)
6 7
;
7 8
var
 
DBResult
 $
=
% &
db
' )
.
) *
QueryDB
* 1
(
1 2
)
2 3
;
3 4
db
 
.
 
LogCount
 #
(
# $
)
$ %
;
% &
var
 
diff
  
=
! "
new
# &#
ICEOpenLinkComparator
' <
(
< =
)
= >
.
> ?
Diff
? C
(
C D
	ICEResult
D M
,
M N
DBResult
O W
)
W X
;
X Y
diff
 
.
 
ForEach
 $
(
$ %
d
% &
=>
' )
ExcelController
* 9
.
9 :"
DataTableCorrectDate
: N
(
N O
ref
O R
d
S T
,
T U
$str
V b
)
b c
)
c d
;
d e
if
 
(
 
diff
  
.
  !
All
! $
(
$ %
d
% &
=>
' )
d
* +
.
+ ,
Rows
, 0
.
0 1
Count
1 6
==
7 9
$num
: ;
)
; <
)
< =
{
 
Logger
 "
.
" #
Info
# '
(
' (
$str
( O
)
O P
;
P Q
}
 
else
 
if
 
(
  !
EnableEmail
! ,
)
, -
{
 
Logger
 "
.
" #
Info
# '
(
' (
$str
( :
)
: ;
;
; <
using
 !
(
" #
EmailController
# 2
email
3 8
=
9 :
new
; >
EmailController
? N
(
N O
)
O P
)
P Q
{
 
Logger
  &
.
& '
Info
' +
(
+ ,
$str
, J
)
J K
;
K L
Logger
  &
.
& '
Info
' +
(
+ ,
$str
, O
)
O P
;
P Q
var
  #
attachmentPaths
$ 3
=
4 5
diff
6 :
.
: ;
Select
; A
(
A B
d
B C
=>
D F
projectPath
G R
+
S T
HelperFunctions
U d
.
d e 
SaveDataTableToCSV
e w
(
w x
d
x y
,
y z
$str{ 
) 
) 
. 
ToList 
( 
) 
; 
Logger
  &
.
& '
Info
' +
(
+ ,
$str
, T
)
T U
;
U V
email
  %
.
% &
SendResultEmail
& 5
(
5 6
p
6 7
.
7 8
CountToHTML
8 C
(
C D
)
D E
+
F G
db
H J
.
J K
CountToHTML
K V
(
V W
)
W X
+
Y Z
Environment
[ f
.
f g
NewLine
g n
+
o p(
BuildComparisonResultBodyq 
( 
diff 
) 
, 
$str 
, 
attachmentPaths ¥
)¥ ¦
;¦ §
}
 
}
 
if
   
(
   
EnableSaveLocal
   +
)
  + ,
{
¡¡ 
Logger
¢¢ "
.
¢¢" #
Info
¢¢# '
(
¢¢' (
$str
¢¢( <
)
¢¢< =
;
¢¢= >
p
££ 
.
££ 
OutputCountToFile
££ /
(
££/ 0
)
££0 1
;
££1 2
DBResult
¤¤ $
.
¤¤$ %
ForEach
¤¤% ,
(
¤¤, -
d
¤¤- .
=>
¤¤/ 1
HelperFunctions
¤¤2 A
.
¤¤A B 
SaveDataTableToCSV
¤¤B T
(
¤¤T U
d
¤¤U V
,
¤¤V W
$str
¤¤X ]
)
¤¤] ^
)
¤¤^ _
;
¤¤_ `
	ICEResult
¥¥ %
.
¥¥% &
ForEach
¥¥& -
(
¥¥- .
d
¥¥. /
=>
¥¥0 2
HelperFunctions
¥¥3 B
.
¥¥B C 
SaveDataTableToCSV
¥¥C U
(
¥¥U V
d
¥¥V W
,
¥¥W X
$str
¥¥Y _
)
¥¥_ `
)
¥¥` a
;
¥¥a b
}
¦¦ 
}
¨¨ 
}
©© 
}
ªª 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
¬¬ 
Logger
­­ 
.
­­ 
Error
­­ 
(
­­ 
ex
­­ 
,
­­  
$str
­­! 2
)
­­2 3
;
­­3 4
return
®® 
;
®® 
}
¯¯ 
}
±± 	
private
³³ 
static
³³ 
string
³³ '
BuildComparisonResultBody
³³ 7
(
³³7 8
List
³³8 <
<
³³< =
	DataTable
³³= F
>
³³F G
diff
³³H L
)
³³L M
{
´´ 	
return
µµ 
string
µµ 
.
µµ 
Join
µµ 
(
µµ 
Environment
µµ *
.
µµ* +
NewLine
µµ+ 2
+
µµ3 4
Environment
µµ5 @
.
µµ@ A
NewLine
µµA H
,
µµH I
diff
µµJ N
.
µµN O
Select
µµO U
(
µµU V
d
µµV W
=>
µµX Z
HTMLGenerator
µµ[ h
.
µµh i
DataTableToHTML
µµi x
(
µµx y
d
µµy z
)
µµz {
)
µµ{ |
)
µµ| }
;
µµ} ~
}
¶¶ 	
private
¸¸ 
static
¸¸ 
void
¸¸ 
CleanUpTempFolder
¸¸ -
(
¸¸- .
)
¸¸. /
{
¹¹ 	
System
ºº 
.
ºº 
IO
ºº 
.
ºº 
DirectoryInfo
ºº #
di
ºº$ &
=
ºº' (
new
ºº) ,
DirectoryInfo
ºº- :
(
ºº: ;"
ConfigurationManager
ºº; O
.
ººO P
AppSettings
ººP [
[
ºº[ \
$str
ºº\ l
]
ººl m
)
ººm n
;
ººn o
foreach
¼¼ 
(
¼¼ 
FileInfo
¼¼ 
file
¼¼ "
in
¼¼# %
di
¼¼& (
.
¼¼( )
GetFiles
¼¼) 1
(
¼¼1 2
)
¼¼2 3
)
¼¼3 4
{
½½ 
file
¾¾ 
.
¾¾ 
Delete
¾¾ 
(
¾¾ 
)
¾¾ 
;
¾¾ 
}
¿¿ 
}
ÀÀ 	
}
ÁÁ 
}ÂÂ 
nC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str &
)& '
]' (
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str &
)& '
]' (
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str (
)( )
]) *
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str :
): ;
]; <
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *¸
oC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.TradeReconMonitor\Monitor\TradeMonitorBase.cs
	namespace 	
OverWatcher
 
. 
TradeReconMonitor '
.' (
Core( ,
{ 
	interface 
ITradeMonitor 
{ 
int 
Futures 
{ 
get 
; 
} 
int 
Swap 
{ 
get 
; 
} 
string		 
MonitorTitle		 
{		 
get		 !
;		! "
}		" #
string

 
CountToHTML

 
(

 
)

 
;

 
void 
LogCount 
( 
) 
; 
} 
} $
fC:\Users\hw72786\Source\Repos\OverWatcher\OverWatcher\OverWatcher.Common.Interface\COMInterfaceBase.cs
	namespace 	
OverWatcher
 
. 
Common 
. 
	Interface &
{		 
internal

 
abstract

 
class

 
COMInterfaceBase

 ,
:

- .
IDisposable

/ :
{ 
	protected 
enum 
COMCloseType #
{$ %
Exit& *
,* +
DecrementRefCount, =
}> ?
;? @
private 
List 
< 
Tuple 
< 
dynamic "
," #
Type$ (
>( )
>) *
COMList+ 2
;2 3
	protected 
List 
< 
Type 
> 
closableCOMList ,
;, -
	protected 
abstract 
void 
CleanUpSetup  ,
(, -
)- .
;. /
	protected 
COMInterfaceBase "
(" #
)# $
{ 	
COMList 
= 
new 
List 
< 
Tuple $
<$ %
dynamic% ,
,, -
Type. 2
>2 3
>3 4
(4 5
)5 6
;6 7
closableCOMList 
= 
new !
List" &
<& '
Type' +
>+ ,
(, -
)- .
;. /
} 	
~ 	
COMInterfaceBase	 
( 
) 
{ 	
Dispose 
( 
false 
) 
; 
} 	
	protected 
virtual 
T 
GetCOM "
<" #
T# $
>$ %
(% &
T& '
com( +
)+ ,
{ 	
COMList 
. 
Add 
( 
new 
Tuple !
<! "
dynamic" )
,) *
Type+ /
>/ 0
(0 1
com1 4
,4 5
typeof6 <
(< =
T= >
)> ?
)? @
)@ A
;A B
return 
com 
; 
}   	
delegate!! 
int!! 
ReleaseCOMFunc!! #
(!!# $
object!!$ *
o!!+ ,
)!!, -
;!!- .
	protected"" 
virtual"" 
void"" 
CloseCOM"" '
(""' (
COMCloseType""( 4
type""5 9
)""9 :
{## 	
ReleaseCOMFunc$$ 
re$$ 
;$$ 
if%% 
(%% 
type%% 
==%% 
COMCloseType%% $
.%%$ %
Exit%%% )
)%%) *
{&& 
re'' 
='' 
Marshal'' 
.'' !
FinalReleaseComObject'' 2
;''2 3
}(( 
else)) 
{** 
re++ 
=++ 
Marshal++ 
.++ 
ReleaseComObject++ -
;++- .
},, 
COMList-- 
.-- 
ForEach-- 
(-- 
com-- 
=>--  "
{.. 
if// 
(// 
com// 
!=// 
null// 
)//  
{00 
if11 
(11 
closableCOMList11 '
.11' (
Any11( +
(11+ ,
t11, -
=>11. 0
t111 2
==113 5
com116 9
.119 :
Item211: ?
)11? @
)11@ A
{22 
com33 
.33 
Item133 !
.33! "
Close33" '
(33' (
)33( )
;33) *
}44 
re55 
(55 
com55 
.55 
Item155  
)55  !
;55! "
}66 
}77 
)77 
;77 
GC99 
.99 
Collect99 
(99 
)99 
;99 
GC:: 
.:: $
WaitForPendingFinalizers:: '
(::' (
)::( )
;::) *
};; 	
	protected== 
abstract== 
void== 
Dispose==  '
(==' (
bool==( ,
	disposing==- 6
)==6 7
;==7 8
public>> 
void>> 
Dispose>> 
(>> 
)>> 
{?? 	
DisposeAA 
(AA 
trueAA 
)AA 
;AA 
}DD 	
}GG 
}HH 